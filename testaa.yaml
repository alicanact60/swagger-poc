{
  "swagger": "2.0",
  "info": {
    "title": "GaggleAMP Engage API",
    "description": "This API allows full interaction with GaggleAMP Engage, built with mobile clients in mind.",
    "termsOfService": "https://www.gaggleamp.com/api-terms-of-service",
    "contact": {
      "email": "developers@gaggleamp.com"
    },
    "version": "1.0"
  },
  "host": "engage-qa.gaggleampstaging.us",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Shows information about the user.",
        "description": "Shows information about the currently authenticated user.",
        "responses": {
          "200": {
            "description": "Information about the currently authenticated user.",
            "schema": {
              "$ref": "#/definitions/CurrentUser"
            },
            "examples": {
              "application/json": {
                "id": 1,
                "name": "Terry Sanders",
                "title": "Customer Support",
                "time_zone": "Eastern Time (US & Canada)",
                "image": "https://accounts.gaggleamp.com/avatars/67fd4fbfe9aa4329ffe6158d94354926ae6429c7?1513768281",
                "followees_count": 2,
                "followers_count": 4,
                "uid": "8",
                "locale": "en",
                "date_format": "us",
                "email": "tsanders@gaggleamp.com",
                "posts_count": 3,
                "pending_invitation_subscriptions_count": 0,
                "teams": [
                  {
                    "id": 1,
                    "name": "GaggleAMP",
                    "domain": "gaggleamp.com",
                    "gaggle_id": 16,
                    "activities_enabled": true,
                    "posts_enabled": true,
                    "memberships_count": 101,
                    "posts_count": 1234,
                    "icon_url": "/system/attachment/images/assets/000/000/002/icon/GaggleAMP.png?1490949057"
                  }
                ],
                "authentications": [
                  {
                    "id": 3,
                    "provider": "twitter",
                    "name": "TSanders",
                    "username": "terrys"
                  }
                ]
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Updates the user information.",
        "description": "Updates information about the currently authenticated user.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The user information object with the updates.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/CurrentUser"
                    },
                    {
                      "properties": {
                        "avatar": {
                          "type": "null",
                          "title": "Avatar",
                          "description": "The user avatar image to be uploaded."
                        },
                        "current_password": {
                          "type": "string",
                          "title": "Current Password",
                          "description": "The user current password."
                        },
                        "password": {
                          "type": "string",
                          "title": "Password",
                          "description": "The user new password to be updated."
                        },
                        "password_confirmation": {
                          "type": "string",
                          "title": "Password Confirmation",
                          "description": "The user new password confirmation."
                        }
                      }
                    }
                  ]
                }
              },
              "required": [
                "user"
              ],
              "example": {
                "user": {
                  "email": "tsanders@gaggleamp.com",
                  "name": "Terry Sanders",
                  "title": "Customer Success"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated information about the currently authenticated user.",
            "schema": {
              "$ref": "#/definitions/CurrentUser"
            },
            "examples": {
              "application/json": {
                "id": 1,
                "name": "Terry Sanders",
                "title": "Customer Success",
                "time_zone": "Eastern Time (US & Canada)",
                "image": "https://accounts.gaggleamp.com/avatars/67fd4fbfe9aa4329ffe6158d94354926ae6429c7?1513768281",
                "followees_count": 2,
                "followers_count": 4,
                "uid": "8",
                "locale": "en",
                "date_format": "us",
                "email": "tsanders@gaggleamp.com",
                "posts_count": 3,
                "pending_invitation_subscriptions_count": 0,
                "teams": [
                  {
                    "id": 1,
                    "name": "GaggleAMP",
                    "domain": "gaggleamp.com",
                    "gaggle_id": 16,
                    "activities_enabled": true,
                    "posts_enabled": true,
                    "memberships_count": 101,
                    "posts_count": 1234,
                    "icon_url": "/system/attachment/images/assets/000/000/002/icon/GaggleAMP.png?1490949057"
                  }
                ],
                "authentications": [
                  {
                    "id": 3,
                    "provider": "twitter",
                    "name": "TSanders",
                    "username": "terrys"
                  }
                ]
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "examples": {
              "application/json": {
                "email": [
                  "is invalid"
                ]
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Uploads a user avatar image.",
        "description": "Updates user avatar image for the currently authenticated user.",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "user[avatar]",
            "in": "formData",
            "description": "The user avatar image to be uploaded.",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated information about the currently authenticated user.",
            "schema": {
              "$ref": "#/definitions/CurrentUser"
            },
            "examples": {
              "application/json": {
                "id": 1,
                "name": "Terry Sanders",
                "title": "Customer Success",
                "time_zone": "Eastern Time (US & Canada)",
                "image": "https://accounts.gaggleamp.com/avatars/67fd4fbfe9aa4329ffe6158d94354926ae6429c7?1513768281",
                "followees_count": 2,
                "followers_count": 4,
                "uid": "8",
                "locale": "en",
                "date_format": "us",
                "email": "tsanders@gaggleamp.com",
                "posts_count": 3,
                "pending_invitation_subscriptions_count": 0,
                "teams": [
                  {
                    "id": 1,
                    "name": "GaggleAMP",
                    "domain": "gaggleamp.com",
                    "gaggle_id": 16,
                    "activities_enabled": true,
                    "posts_enabled": true,
                    "memberships_count": 101,
                    "posts_count": 1234,
                    "icon_url": "/system/attachment/images/assets/000/000/002/icon/GaggleAMP.png?1490949057"
                  }
                ],
                "authentications": [
                  {
                    "id": 3,
                    "provider": "twitter",
                    "name": "TSanders",
                    "username": "terrys"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/user/preferences/activities/teams/{team_id}": {
      "get": {
        "tags": [
          "user",
          "preferences"
        ],
        "summary": "Shows the user activities preferences.",
        "description": "Shows the user team preferences, more specifically the activities preferences.",
        "responses": {
          "200": {
            "description": "The user team preferences.",
            "schema": {
              "$ref": "#/definitions/Preferences"
            },
            "examples": {
              "application/json": {
                "id": null,
                "hide_channelless": true,
                "mute_facebook": false,
                "mute_linkedin": false,
                "mute_instagram": false,
                "mute_twitter": false,
                "mute_google": false,
                "mute_vkontakte": false,
                "mute_yammer": false
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "user",
          "preferences"
        ],
        "summary": "Updates the user activities preferences.",
        "description": "Updates the user team preferences, more specifically the activities preferences.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The user team preferences object to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "users_preferences_activities": {
                  "$ref": "#/definitions/Preferences"
                }
              },
              "required": [
                "users_preferences_activities"
              ],
              "example": {
                "users_preferences_activities": {
                  "hide_channelless": true,
                  "mute_facebook": false,
                  "mute_instagram": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user team preferences has been successfully updated.",
            "schema": {
              "$ref": "#/definitions/Preferences"
            },
            "examples": {
              "application/json": {
                "id": 1,
                "hide_channelless": true,
                "mute_facebook": false,
                "mute_linkedin": false,
                "mute_instagram": true,
                "mute_twitter": false,
                "mute_google": false,
                "mute_vkontakte": false,
                "mute_yammer": false
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Team"
        }
      ]
    },
    "/user/preferences/notifications/teams/{team_id}": {
      "get": {
        "tags": [
          "user",
          "preferences"
        ],
        "summary": "Shows the user notifications preferences.",
        "description": "Shows the user team preferences, more specifically the e-mail notifications preferences.",
        "responses": {
          "200": {
            "description": "The user team preferences.",
            "schema": {
              "$ref": "#/definitions/Preferences"
            },
            "examples": {
              "application/json": {
                "id": null,
                "activity_after_start_notification": null,
                "post_after_comment_notification": true,
                "post_after_create_notification": true,
                "post_after_promote_notification": true,
                "post_after_vote_notification": false,
                "user_after_follow_notification": true,
                "post_after_create_notification_frequency": null,
                "subscription_after_destroy_notification": true,
                "subscription_after_pending_invitation_notification": true
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "user",
          "preferences"
        ],
        "summary": "Updates the user notifications preferences.",
        "description": "Updates the user team preferences, more specifically the e-mail notifications preferences.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The user team preferences object to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "users_preferences_notifications": {
                  "$ref": "#/definitions/Preferences"
                }
              },
              "required": [
                "users_preferences_notifications"
              ],
              "example": {
                "users_preferences_notifications": {
                  "post_after_promote_notification": false,
                  "post_after_create_notification_frequency": "daily"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user team preferences has been successfully updated.",
            "schema": {
              "$ref": "#/definitions/Preferences"
            },
            "examples": {
              "application/json": {
                "id": 1,
                "activity_after_start_notification": null,
                "post_after_comment_notification": true,
                "post_after_create_notification": true,
                "post_after_promote_notification": false,
                "post_after_vote_notification": false,
                "user_after_follow_notification": true,
                "post_after_create_notification_frequency": "daily",
                "subscription_after_destroy_notification": true,
                "subscription_after_pending_invitation_notification": true
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "examples": {
              "application/json": {
                "post_after_create_notification_frequency": [
                  "is not included in the list"
                ]
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Team"
        }
      ]
    },
    "/user/preferences/notifications/teams/{team_id}/devices/{device_platform}/{device_identifier}": {
      "get": {
        "tags": [
          "user",
          "preferences"
        ],
        "summary": "Shows the user device notifications preferences.",
        "description": "Shows the user device team preferences, more specifically the mobile notifications preferences.",
        "responses": {
          "200": {
            "description": "The user device team preferences.",
            "schema": {
              "$ref": "#/definitions/Preferences"
            },
            "examples": {
              "application/json": {
                "id": null,
                "activity_after_start_notification": true,
                "post_after_comment_notification": true,
                "post_after_create_notification": true,
                "post_after_promote_notification": true,
                "post_after_vote_notification": false,
                "user_after_follow_notification": true,
                "post_after_create_notification_frequency": null,
                "subscription_after_destroy_notification": true,
                "subscription_after_pending_invitation_notification": true,
                "device": {
                  "id": 1,
                  "identifier": "a1712ff7d19486b54e655d0b69990e473343d0ac1597554e07766d9fd86e3a6a"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "user",
          "preferences"
        ],
        "summary": "Updates the user device notifications preferences.",
        "description": "Updates the user device team preferences, more specifically the mobile notifications preferences.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The user device team preferences object to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "users_preferences_notifications": {
                  "$ref": "#/definitions/Preferences"
                }
              },
              "required": [
                "users_preferences_notifications"
              ],
              "example": {
                "users_preferences_notifications": {
                  "post_after_promote_notification": false,
                  "post_after_comment_notification": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user device team preferences has been successfully updated.",
            "schema": {
              "$ref": "#/definitions/Preferences"
            },
            "examples": {
              "application/json": {
                "id": 1,
                "activity_after_start_notification": true,
                "post_after_comment_notification": false,
                "post_after_create_notification": true,
                "post_after_promote_notification": false,
                "post_after_vote_notification": false,
                "user_after_follow_notification": true,
                "post_after_create_notification_frequency": null,
                "subscription_after_destroy_notification": true,
                "subscription_after_pending_invitation_notification": true,
                "device": {
                  "id": 1,
                  "identifier": "a1712ff7d19486b54e655d0b69990e473343d0ac1597554e07766d9fd86e3a6a"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "examples": {
              "application/json": {
                "post_after_create_notification_frequency": [
                  "is not included in the list"
                ]
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Team"
        },
        {
          "name": "device_platform",
          "in": "path",
          "description": "The device platform.",
          "required": true,
          "type": "string",
          "enum": [
            "android",
            "ios"
          ]
        },
        {
          "name": "device_identifier",
          "in": "path",
          "description": "The device identifier.",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/user/preferences/amplify/notifications": {
      "get": {
        "tags": [
          "user",
          "preferences"
        ],
        "summary": "Shows the user Amplify notifications preferences.",
        "description": "Shows the user Amplify preferences, more specifically the notifications preferences.",
        "responses": {
          "200": {
            "description": "The user Amplify preferences.",
            "schema": {
              "$ref": "#/definitions/Preferences"
            },
            "examples": {
              "application/json": {
                "activity_after_start_notification": true,
                "activity_after_start_notification_frequency": null,
                "activity_after_broadcast_notification": true,
                "notification_kind_of_activity_to_be_notified": "all_content",
                "notification_include_seen_activities": false
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "user",
          "preferences"
        ],
        "summary": "Updates the user Amplify notifications preferences.",
        "description": "Updates the user Amplify preferences, more specifically the notifications preferences.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The user Amplify preferences object to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "amplify_preferences_notifications": {
                  "$ref": "#/definitions/Preferences"
                }
              },
              "required": [
                "amplify_preferences_notifications"
              ],
              "example": {
                "amplify_preferences_notifications": {
                  "activity_after_start_notification_frequency": "daily",
                  "activity_after_broadcast_notification": false,
                  "notification_kind_of_activity_to_be_notified": "all_content",
                  "notification_include_seen_activities": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user Amplify preferences has been successfully updated.",
            "schema": {
              "$ref": "#/definitions/Preferences"
            },
            "examples": {
              "application/json": {
                "activity_after_start_notification": true,
                "activity_after_start_notification_frequency": "daily",
                "activity_after_broadcast_notification": false,
                "notification_kind_of_activity_to_be_notified": "all_content",
                "notification_include_seen_activities": false
              }
            }
          }
        }
      }
    },
    "/user/preferences/amplify/scheduling": {
      "get": {
        "tags": [
          "user",
          "preferences"
        ],
        "summary": "Shows the user Amplify scheduling preferences.",
        "description": "Shows the user Amplify preferences, more specifically the scheduling preferences.",
        "responses": {
          "200": {
            "description": "The user Amplify preferences.",
            "schema": {
              "$ref": "#/definitions/Preferences"
            },
            "examples": {
              "application/json": {
                "days": 3,
                "weekdays_only": false,
                "any_time": false,
                "start_time_hours": 8,
                "end_time_hours": 18,
                "time_zone": "Eastern Time (US & Canada)"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "user",
          "preferences"
        ],
        "summary": "Updates the user Amplify scheduling preferences.",
        "description": "Updates the user Amplify preferences, more specifically the scheduling preferences.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The user Amplify preferences object to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "amplify_preferences_scheduling": {
                  "$ref": "#/definitions/Preferences"
                }
              },
              "required": [
                "amplify_preferences_scheduling"
              ],
              "example": {
                "amplify_preferences_scheduling": {
                  "days": 2
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user Amplify preferences has been successfully updated.",
            "schema": {
              "$ref": "#/definitions/Preferences"
            },
            "examples": {
              "application/json": {
                "days": 2,
                "weekdays_only": false,
                "any_time": false,
                "start_time_hours": 8,
                "end_time_hours": 18,
                "time_zone": "Eastern Time (US & Canada)"
              }
            }
          }
        }
      }
    },
    "/user/subscriptions": {
      "get": {
        "tags": [
          "user",
          "subscriptions"
        ],
        "summary": "Shows the user channel subscriptions.",
        "description": "Shows the list of channel subscriptions for the currently authenticated user, filtered by requested team and paginated.",
        "parameters": [
          {
            "name": "team_id",
            "in": "query",
            "description": "The subscriptions list team filter.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The paginated list page.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "The paginated list limit.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "The list of channel subscriptions.",
            "schema": {
              "$ref": "#/definitions/Subscriptions"
            },
            "headers": {
              "Link": {
                "description": "Pagination links in conformance with RFC 5988.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "collectionFormat": "csv"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 4,
                  "tier": "administrator",
                  "invitation": null,
                  "notifications_setting": "mute",
                  "created_at": "2017-02-09T19:48:36.021-05:00",
                  "channel": {
                    "id": 1,
                    "name": "Awesome Posts",
                    "slug": "awesome",
                    "viewership": "public",
                    "icon_url": "/system/attachment/images/assets/000/000/001/icon/data?1493032545"
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/user/invitations": {
      "get": {
        "tags": [
          "user",
          "subscriptions"
        ],
        "summary": "Shows the user channel subscription invitations.",
        "description": "Shows the list of channel subscription invitations for the currently authenticated user, filtered by requested team and/or invitation status and paginated.",
        "parameters": [
          {
            "name": "team_id",
            "in": "query",
            "description": "The subscription invitations list team filter.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "invitation",
            "in": "query",
            "description": "The subscription invitations list status filter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "default": "pending",
            "enum": [
              "rejected",
              "pending",
              "accepted"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "The paginated list page.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "The paginated list limit.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "The list of channel subscription invitations.",
            "schema": {
              "$ref": "#/definitions/Invitations"
            },
            "headers": {
              "Link": {
                "description": "Pagination links in conformance with RFC 5988.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "collectionFormat": "csv"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 4,
                  "tier": "administrator",
                  "invitation": "pending",
                  "notifications_setting": "enabled",
                  "created_at": "2017-02-09T19:48:36.021-05:00",
                  "channel": {
                    "id": 1,
                    "name": "Awesome Posts",
                    "slug": "awesome",
                    "viewership": "public",
                    "icon_url": "/system/attachment/images/assets/000/000/001/icon/data?1493032545"
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/user/posts": {
      "get": {
        "tags": [
          "user",
          "posts"
        ],
        "summary": "Shows the user authored posts.",
        "description": "Shows the list of authored posts for the currently authenticated user, filtered by requested team and paginated.",
        "parameters": [
          {
            "name": "team_id",
            "in": "query",
            "description": "The posts list team filter.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The paginated list page.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "The paginated list limit.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "The list of authored posts.",
            "schema": {
              "$ref": "#/definitions/Posts"
            },
            "headers": {
              "Link": {
                "description": "Pagination links in conformance with RFC 5988.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "collectionFormat": "csv"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 3,
                  "team_id": 2,
                  "text": "Lorem ipsum dolor sit amet.",
                  "link": "http://www.example.com/",
                  "link_title": "Example Domain",
                  "link_description": "This domain is established to be used for illustrative examples in documents.",
                  "publishable": true,
                  "published_at": "2017-02-09T19:48:36.002-05:00",
                  "created_at": "2017-02-09T19:48:36.021-05:00",
                  "updated_at": "2017-02-09T19:48:36.021-05:00",
                  "comments_count": 1,
                  "votes_count": 2,
                  "author": {
                    "id": 1,
                    "type": "User",
                    "name": "Terry Sanders",
                    "description": "Customer Support",
                    "image_url": "https://accounts.gaggleamp.com/avatars/67fd4fbfe9aa4329ffe6158d94354926ae6429c7?1513768281"
                  },
                  "channel": {
                    "id": 1,
                    "name": "Awesome Posts",
                    "slug": "awesome",
                    "viewership": "public",
                    "icon_url": "/system/attachment/images/assets/000/000/001/icon/data?1493032545"
                  },
                  "text_html": "<p>Lorem ipsum dolor sit amet.</p>\n"
                },
                {
                  "id": 2,
                  "team_id": 1,
                  "text": "This is an awesome service!",
                  "link": null,
                  "link_title": null,
                  "link_description": null,
                  "publishable": true,
                  "published_at": "2017-02-08T08:13:52.311-05:00",
                  "created_at": "2017-02-08T08:13:52.319-05:00",
                  "updated_at": "2017-02-08T08:13:52.319-05:00",
                  "comments_count": 2,
                  "votes_count": 3,
                  "author": {
                    "id": 1,
                    "type": "User",
                    "name": "Terry Sanders",
                    "description": "Customer Support",
                    "image_url": "https://accounts.gaggleamp.com/avatars/67fd4fbfe9aa4329ffe6158d94354926ae6429c7?1513768281"
                  },
                  "channel": {
                    "id": 1,
                    "name": "Awesome Posts",
                    "slug": "awesome",
                    "viewership": "public",
                    "icon_url": "/system/attachment/images/assets/000/000/001/icon/data?1493032545"
                  },
                  "attachment": {
                    "id": 1,
                    "asset": {
                      "file_name": "data",
                      "content_type": "image/png",
                      "file_size": 2534,
                      "url": "/system/attachment/images/assets/000/000/001/original/data?1493032545",
                      "processing": false,
                      "thumbnail_url": "/system/attachment/images/assets/000/000/001/thumb/data?1493032545",
                      "small_url": "/system/attachment/images/assets/000/000/001/small/data?1493032545",
                      "medium_url": "/system/attachment/images/assets/000/000/001/medium/data?1493032545",
                      "large_url": "/system/attachment/images/assets/000/000/001/large/data?1493032545"
                    }
                  },
                  "text_html": "<p>This is an awesome service!</p>\n"
                }
              ]
            }
          }
        }
      }
    },
    "/user/activities": {
      "get": {
        "tags": [
          "user",
          "activities"
        ],
        "summary": "Show activities for user.",
        "description": "Shows the list of activities for the currently authenticated user.\n\nThe default `all` scope projects all accessible activities by the currently authenticated user, while the `feed` scope projects activities only from the subscribed channels, and the `schedulable` scope projects only activities that can be scheduled.\n\nThe parameter `channel_id` can receive the special string value `any` in order to filter out activities without an associated channel.",
        "parameters": [
          {
            "name": "scope",
            "in": "query",
            "description": "The activities list scope.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "default": "all",
            "enum": [
              "all",
              "feed",
              "schedulable"
            ]
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "The activities list team filter.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "channel_id",
            "in": "query",
            "description": "The activities list channels filter.",
            "required": false,
            "type": "array",
            "allowEmptyValue": false,
            "items": {
              "type": "integer"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "The activity list sort by order.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "default": "by_start_time",
            "enum": [
              "by_start_time",
              "by_expire_time",
              "by_perform_count",
              "by_social_interactions",
              "by_points"
            ]
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "The activity list sort direction.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "default": "desc",
            "enum": [
              "desc",
              "asc"
            ]
          },
          {
            "name": "channel_ids",
            "in": "query",
            "description": "Activities filtered by channel id",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "platforms",
            "in": "query",
            "description": "Activities filterd by activity platform",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "featured",
            "in": "query",
            "description": "Featured activities",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": false
          },
          {
            "name": "no_channel",
            "in": "query",
            "description": "Activities that are not tied to a channel",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "The list of activities.",
            "schema": {
              "$ref": "#/definitions/Activities"
            },
            "examples": {
              "application/json": [
                {
                  "id": 1,
                  "platform": "twitter",
                  "type": "Activity::Twitter::Tweet",
                  "team_id": 1,
                  "preview": "Sample tweet",
                  "text": "Sample tweet",
                  "link": null,
                  "link_title": null,
                  "link_description": null,
                  "hashtag": null,
                  "starts_at": "2017-06-08T11:39:13.000-04:00",
                  "expires_at": null,
                  "points": null,
                  "editable": false,
                  "commentable": false,
                  "mediable": false,
                  "redirecting": false,
                  "created_at": "2017-06-08T11:39:13.000-04:00",
                  "updated_at": "2017-06-08T11:39:13.000-04:00",
                  "schedulable": true,
                  "schedulable_at": "2017-06-13T11:29:52.000-04:00",
                  "preview_html": "<p>Sample tweet</p>\n",
                  "text_html": "<p>Sample tweet</p>\n",
                  "channel": {
                    "id": 1,
                    "name": "Awesome Posts",
                    "slug": "awesome",
                    "viewership": "public",
                    "icon_url": "/system/attachment/images/assets/000/000/001/icon/data?1493032545"
                  },
                  "suggested_channel": null,
                  "attachment": null
                },
                {
                  "amplify_id": 1,
                  "platform": "twitter",
                  "type": "activity/twitter_message",
                  "preview": "Sample Amplify tweet",
                  "text": "Sample Amplify tweet",
                  "link": null,
                  "link_title": null,
                  "link_description": null,
                  "hashtag": null,
                  "starts_at": "2017-06-07T11:49:14.000-04:00",
                  "expires_at": "2017-06-14T17:00:00.000-04:00",
                  "points": 5,
                  "editable": true,
                  "commentable": false,
                  "mediable": false,
                  "redirecting": false,
                  "schedulable": true,
                  "preview_html": "<p>Sample Amplify tweet</p>\n",
                  "text_html": "<p>Sample Amplify tweet</p>\n"
                },
                {
                  "amplify_id": 2,
                  "platform": "linkedin",
                  "type": "activity/linkedin_message",
                  "preview": "The best activity ever",
                  "text": "The best activity ever",
                  "link": null,
                  "link_title": null,
                  "link_description": null,
                  "hashtag": null,
                  "starts_at": "2017-06-08T05:54:08.000-04:00",
                  "expires_at": "2017-06-15T17:00:00.000-04:00",
                  "points": 5,
                  "editable": false,
                  "commentable": false,
                  "mediable": false,
                  "redirecting": false,
                  "schedulable": true,
                  "attachment": {
                    "asset": {
                      "content_type": "image",
                      "url": "/system/attachments/development/photo_attachment_files/10/original/share_on_linkedin.jpg",
                      "thumbnail_url": "/system/attachments/development/photo_attachment_files/10/thumb/share_on_linkedin.jpg"
                    }
                  },
                  "preview_html": "<p>The best activity ever</p>\n",
                  "text_html": "<p>The best activity ever</p>\n"
                }
              ]
            }
          }
        }
      }
    },
    "/user/activities/{activity_id}": {
      "get": {
        "tags": [
          "user",
          "activities"
        ],
        "summary": "Shows the requested activity for user.",
        "description": "Shows the requested activity for the currently authenticated user.",
        "parameters": [
          {
            "name": "activity_id",
            "in": "path",
            "description": "The activity scope (ID).",
            "required": true,
            "type": "integer"
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "The requested activity's team id.",
            "required": true,
            "type": "integer",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "The requested activity object.",
            "schema": {
              "$ref": "#/definitions/Activity"
            },
            "examples": {
              "application/json": [
                {
                  "amplify_id": 1,
                  "platform": "twitter",
                  "type": "activity/twitter_message",
                  "preview": "Sample Amplify tweet",
                  "text": "Sample Amplify tweet",
                  "link": null,
                  "link_title": null,
                  "link_description": null,
                  "hashtag": null,
                  "starts_at": "2017-06-07T11:49:14.000-04:00",
                  "expires_at": "2017-06-14T17:00:00.000-04:00",
                  "points": 5,
                  "editable": true,
                  "commentable": false,
                  "mediable": false,
                  "redirecting": false,
                  "schedulable": true,
                  "preview_html": "<p>Sample Amplify tweet</p>\n",
                  "text_html": "<p>Sample Amplify tweet</p>\n"
                }
              ]
            }
          },
          "404": {
            "description": "The activity cannot be found.",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        }
      }
    },
    "/user/activities/statuses": {
      "get": {
        "tags": [
          "user",
          "activities"
        ],
        "summary": "Show activities statuses for user.",
        "description": "Shows the list of activities statuses for the currently authenticated user.\n\nThe default `all` scope projects all accessible activities statuses by the currently authenticated user, while the `scheduled` scope projects only activities statuses for activities that have been scheduled, the `refused` scope for activities that have been refused and the `completed` scope for activities that have been successfully performed.",
        "parameters": [
          {
            "name": "scope",
            "in": "query",
            "description": "The activities statuses list scope.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "default": "all",
            "enum": [
              "all",
              "scheduled",
              "refused",
              "completed",
              "autoshared"
            ]
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "The activities statuses list team filter.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "channel_ids",
            "in": "query",
            "description": "Activities filtered by channel id",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "platforms",
            "in": "query",
            "description": "Activities filterd by activity platform",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "featured",
            "in": "query",
            "description": "Featured activities",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": false
          },
          {
            "name": "no_channel",
            "in": "query",
            "description": "Activities that are not tied to a channel",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "The list of activities statuses.",
            "schema": {
              "$ref": "#/definitions/ActivitiesStatuses"
            },
            "examples": {
              "application/json": [
                {
                  "id": 2,
                  "scheduled_at": null,
                  "autoshare": false,
                  "edited": false,
                  "edit_prefix": null,
                  "edit_infix": null,
                  "edit_suffix": null,
                  "feedback": false,
                  "feedback_response": null,
                  "created_at": "2017-12-16T02:57:34.079-05:00",
                  "updated_at": "2017-12-16T03:59:17.107-05:00",
                  "state": "approved",
                  "state_at": "2017-12-16T03:59:17.107-05:00",
                  "activity": {
                    "id": 1,
                    "platform": "twitter",
                    "type": "Activity::Twitter::Tweet",
                    "team_id": 1,
                    "preview": "Sample tweet",
                    "text": "Sample tweet",
                    "link": null,
                    "link_title": null,
                    "link_description": null,
                    "hashtag": null,
                    "starts_at": "2017-12-08T11:39:13.000-05:00",
                    "expires_at": null,
                    "points": null,
                    "editable": false,
                    "commentable": false,
                    "mediable": false,
                    "redirecting": false,
                    "created_at": "2017-12-08T11:39:13.000-05:00",
                    "updated_at": "2017-12-08T11:39:13.000-05:00",
                    "preview_html": "<p>Sample tweet</p>\n",
                    "text_html": "<p>Sample tweet</p>\n",
                    "channel": {
                      "id": 1,
                      "name": "Awesome Posts",
                      "slug": "awesome",
                      "viewership": "public",
                      "icon_url": "/system/attachment/images/assets/000/000/001/icon/data?1493032545"
                    },
                    "suggested_channel": null,
                    "attachment": null
                  }
                },
                {
                  "amplify_id": 1,
                  "scheduled_at": "2017-12-17T11:52:12.000-04:00",
                  "autoshare": false,
                  "edited": true,
                  "edit_prefix": null,
                  "edit_infix": "An enhanced sample Amplify tweet",
                  "edit_suffix": null,
                  "state": "approved",
                  "state_at": "2017-12-17T11:52:12.000-04:00",
                  "activity": {
                    "amplify_id": 1,
                    "platform": "twitter",
                    "type": "activity/twitter_message",
                    "preview": "Sample Amplify tweet",
                    "text": "Sample Amplify tweet",
                    "link": null,
                    "link_title": null,
                    "link_description": null,
                    "hashtag": null,
                    "starts_at": "2017-12-06T11:49:14.000-04:00",
                    "expires_at": "2017-12-24T17:00:00.000-04:00",
                    "points": 5,
                    "editable": true,
                    "commentable": false,
                    "mediable": false,
                    "redirecting": false,
                    "preview_html": "<p>Sample Amplify tweet</p>\n",
                    "text_html": "<p>Sample Amplify tweet</p>\n"
                  }
                },
                {
                  "id": 1,
                  "scheduled_at": null,
                  "autoshare": false,
                  "edited": false,
                  "edit_prefix": null,
                  "edit_infix": null,
                  "edit_suffix": null,
                  "feedback": true,
                  "feedback_response": "I did not like the activity text.",
                  "created_at": "2017-12-10T02:34:12.089-05:00",
                  "updated_at": "2017-12-10T03:52:11.102-05:00",
                  "state": "refused",
                  "state_at": "2017-12-10T03:52:11.102-05:00",
                  "activity": {
                    "id": 2,
                    "platform": "twitter",
                    "type": "Activity::Twitter::Tweet",
                    "team_id": 1,
                    "preview": "Another sample tweet",
                    "text": "Another sample tweet",
                    "link": null,
                    "link_title": null,
                    "link_description": null,
                    "hashtag": null,
                    "starts_at": "2017-12-09T10:32:11.000-04:00",
                    "expires_at": null,
                    "points": null,
                    "editable": false,
                    "commentable": false,
                    "mediable": false,
                    "redirecting": false,
                    "created_at": "2017-12-09T10:32:11.000-04:00",
                    "updated_at": "2017-12-09T10:32:11.000-04:00",
                    "preview_html": "<p>Another sample tweet</p>\n",
                    "text_html": "<p>Another sample tweet</p>\n",
                    "channel": null,
                    "suggested_channel": null,
                    "attachment": null
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/user/favorites": {
      "get": {
        "tags": [
          "user",
          "posts"
        ],
        "summary": "Shows the user favorite posts.",
        "description": "Shows the list of favorite posts for the currently authenticated user, filtered by requested team and paginated.",
        "parameters": [
          {
            "name": "team_id",
            "in": "query",
            "description": "The posts list team filter.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The paginated list page.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "The paginated list limit.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "The list of favorite posts.",
            "schema": {
              "$ref": "#/definitions/Posts"
            },
            "headers": {
              "Link": {
                "description": "Pagination links in conformance with RFC 5988.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "collectionFormat": "csv"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 3,
                  "team_id": 2,
                  "text": "Lorem ipsum dolor sit amet.",
                  "link": "http://www.example.com/",
                  "link_title": "Example Domain",
                  "link_description": "This domain is established to be used for illustrative examples in documents.",
                  "publishable": true,
                  "published_at": "2017-02-09T19:48:36.002-05:00",
                  "created_at": "2017-02-09T19:48:36.021-05:00",
                  "updated_at": "2017-02-09T19:48:36.021-05:00",
                  "comments_count": 1,
                  "votes_count": 2,
                  "author": {
                    "id": 1,
                    "type": "User",
                    "name": "Terry Sanders",
                    "description": "Customer Support",
                    "image_url": "https://accounts.gaggleamp.com/avatars/67fd4fbfe9aa4329ffe6158d94354926ae6429c7?1513768281"
                  },
                  "channel": {
                    "id": 1,
                    "name": "Awesome Posts",
                    "slug": "awesome",
                    "viewership": "public",
                    "icon_url": "/system/attachment/images/assets/000/000/001/icon/data?1493032545"
                  },
                  "text_html": "<p>Lorem ipsum dolor sit amet.</p>\n"
                },
                {
                  "id": 2,
                  "team_id": 1,
                  "text": "This is an awesome service!",
                  "link": null,
                  "link_title": null,
                  "link_description": null,
                  "publishable": true,
                  "published_at": "2017-02-08T08:13:52.311-05:00",
                  "created_at": "2017-02-08T08:13:52.319-05:00",
                  "updated_at": "2017-02-08T08:13:52.319-05:00",
                  "comments_count": 2,
                  "votes_count": 3,
                  "author": {
                    "id": 1,
                    "type": "User",
                    "name": "Terry Sanders",
                    "description": "Customer Support",
                    "image_url": "https://accounts.gaggleamp.com/avatars/67fd4fbfe9aa4329ffe6158d94354926ae6429c7?1513768281"
                  },
                  "channel": {
                    "id": 1,
                    "name": "Awesome Posts",
                    "slug": "awesome",
                    "viewership": "public",
                    "icon_url": "/system/attachment/images/assets/000/000/001/icon/data?1493032545"
                  },
                  "attachment": {
                    "id": 1,
                    "asset": {
                      "file_name": "data",
                      "content_type": "image/png",
                      "file_size": 2534,
                      "url": "/system/attachment/images/assets/000/000/001/original/data?1493032545",
                      "processing": false,
                      "thumbnail_url": "/system/attachment/images/assets/000/000/001/thumb/data?1493032545",
                      "small_url": "/system/attachment/images/assets/000/000/001/small/data?1493032545",
                      "medium_url": "/system/attachment/images/assets/000/000/001/medium/data?1493032545",
                      "large_url": "/system/attachment/images/assets/000/000/001/large/data?1493032545"
                    }
                  },
                  "text_html": "<p>This is an awesome service!</p>\n"
                }
              ]
            }
          }
        }
      }
    },
    "/user/followers": {
      "get": {
        "tags": [
          "user",
          "followerships"
        ],
        "summary": "Shows the user followers.",
        "description": "Shows the list of followers for the currently authenticated user, filtered by requested team and paginated.",
        "parameters": [
          {
            "name": "team_id",
            "in": "query",
            "description": "The followers list team filter.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The paginated list page.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "The paginated list limit.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "query",
            "in": "query",
            "description": "The users list query filter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "The list of user followers.",
            "schema": {
              "$ref": "#/definitions/Users"
            },
            "headers": {
              "Link": {
                "description": "Pagination links in conformance with RFC 5988.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "collectionFormat": "csv"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 1,
                  "name": "Terry Sanders",
                  "title": "Customer Support",
                  "time_zone": "Eastern Time (US & Canada)",
                  "image": "https://accounts.gaggleamp.com/avatars/67fd4fbfe9aa4329ffe6158d94354926ae6429c7?1513768281",
                  "followees_count": 0,
                  "followers_count": 1
                },
                {
                  "id": 2,
                  "name": "John Doe",
                  "title": "Unknown",
                  "time_zone": "Eastern Time (US & Canada)",
                  "image": "https://accounts.gaggleamp.com/avatars/97fd4fbfe9444af9ffe0ee6d94354926ae6429c8?1513738381",
                  "followees_count": 1,
                  "followers_count": 0
                }
              ]
            }
          }
        }
      }
    },
    "/user/followees": {
      "get": {
        "tags": [
          "user",
          "followerships"
        ],
        "summary": "Shows the user followees.",
        "description": "Shows the list of followees for the currently authenticated user, filtered by requested team and paginated.",
        "parameters": [
          {
            "name": "team_id",
            "in": "query",
            "description": "The followees list team filter.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The paginated list page.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "The paginated list limit.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "query",
            "in": "query",
            "description": "The users list query filter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "The list of user followees.",
            "schema": {
              "$ref": "#/definitions/Users"
            },
            "headers": {
              "Link": {
                "description": "Pagination links in conformance with RFC 5988.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "collectionFormat": "csv"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 1,
                  "name": "Terry Sanders",
                  "title": "Customer Support",
                  "time_zone": "Eastern Time (US & Canada)",
                  "image": "https://accounts.gaggleamp.com/avatars/67fd4fbfe9aa4329ffe6158d94354926ae6429c7?1513768281",
                  "followees_count": 0,
                  "followers_count": 1
                },
                {
                  "id": 2,
                  "name": "John Doe",
                  "title": "Unknown",
                  "time_zone": "Eastern Time (US & Canada)",
                  "image": "https://accounts.gaggleamp.com/avatars/97fd4fbfe9444af9ffe0ee6d94354926ae6429c8?1513738381",
                  "followees_count": 1,
                  "followers_count": 0
                }
              ]
            }
          }
        }
      }
    },
    "/user/authentication/{provider}": {
      "post": {
        "tags": [
          "authentications",
          "user"
        ],
        "summary": "Associates a new provider authentication with the user.",
        "description": "Associates a new provider authentication for the currently authenticated user.\n\nThis endpoint may also accept parameters `code` and `redirect_uri` which will exchange with access token, fetching the profile information and filling compatible attributes.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The authentication object to be created.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "authentication": {
                  "$ref": "#/definitions/Authentication"
                }
              },
              "required": [
                "authentication"
              ],
              "example": {
                "authentication": {
                  "uid": "46739782",
                  "name": "Terry Sanders",
                  "token": "cyuwfpxZ226hwv9TyjBh",
                  "secret": "Y8LjSHGMYiBbyXnznnfC"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The provider authentication has been associated to the requesting user.",
            "schema": {
              "$ref": "#/definitions/CurrentAuthentication"
            },
            "examples": {
              "application/json": {
                "id": 3,
                "provider": "twitter",
                "name": "Terry Sanders",
                "username": null
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "examples": {
              "application/json": {
                "token": [
                  "can't be blank"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "authentications",
          "user"
        ],
        "summary": "Deassociates a provider authentication with the user.",
        "description": "Deassociates a provider authentication with the currently authenticated user.",
        "responses": {
          "204": {
            "description": "The authentication has been deassociated to the requesting user."
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Provider"
        }
      ]
    },
    "/user/authentication/{provider}/new": {
      "get": {
        "tags": [
          "authentications",
          "user"
        ],
        "summary": "Initiates the creation process of a new provider authentication.",
        "description": "Requests the generation of a new request token in order to initialize the 3-legged OAuth process. Currently only supported for Twitter.",
        "parameters": [
          {
            "name": "redirect_uri",
            "in": "query",
            "description": "The redirection URI to bind the token with.",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "The request token object.",
            "schema": {
              "type": "object",
              "properties": {
                "oauth_token": {
                  "type": "string",
                  "title": "OAuth Token",
                  "description": "The OAuth request token.",
                  "readOnly": true
                },
                "oauth_token_secret": {
                  "type": "string",
                  "title": "OAuth Token Secret",
                  "description": "The OAuth request token secret.",
                  "readOnly": true
                },
                "oauth_callback_confirmed": {
                  "type": "string",
                  "title": "OAuth Callback Confirmed",
                  "description": "Indicates that redirection URI is valid.",
                  "readOnly": true
                }
              }
            },
            "examples": {
              "application/json": {
                "oauth_token": "NPcudxy0yU5T3tBzho7iCotZ3cnetKwcTIRlX0iwRl0",
                "oauth_token_secret": "veNRnAWe6inFuo8o2u8SLLZLjolYDmDP7SzL0YfYI",
                "oauth_callback_confirmed": "true"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Provider"
        }
      ]
    },
    "/user/devices/{platform}": {
      "post": {
        "tags": [
          "devices",
          "user"
        ],
        "summary": "Associates a new device with the user.",
        "description": "Associates a new device with the currently authenticated user.\n\nWith the `enterprise` parameter an enterprise build of the device application should be indicated.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The device object to be created.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "device": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Device"
                    },
                    {
                      "properties": {
                        "enterprise": {
                          "type": "boolean",
                          "title": "Enterprise",
                          "description": "Device application build type.",
                          "default": false
                        }
                      }
                    }
                  ]
                }
              },
              "required": [
                "device"
              ],
              "example": {
                "device": {
                  "identifier": "a1712ff7d19486b54e655d0b69990e473343d0ac1597554e07766d9fd86e3a6a",
                  "enterprise": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The device is already associated to the requesting user."
          },
          "201": {
            "description": "The device has been associated to the requesting user."
          },
          "422": {
            "description": "Validation Failed",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "examples": {
              "application/json": {
                "identifier": [
                  "has already been taken"
                ]
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Platform"
        }
      ]
    },
    "/devices/{platform}/{identifier}": {
      "delete": {
        "tags": [
          "devices",
          "user"
        ],
        "summary": "Deassociates a device with the user.",
        "description": "Deassociates a device with the currently authenticated user.",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "The device identifier to be deassociated.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "The device has been deassociated to the requesting user."
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Platform"
        }
      ]
    },
    "/user/rewards/redemptions": {
      "get": {
        "tags": [
          "user",
          "redemptions"
        ],
        "summary": "Show rewards redemptions for user.",
        "description": "Shows the list of rewards redemptions for the currently authenticated user, filtered by requested team and paginated.",
        "parameters": [
          {
            "name": "team_id",
            "in": "query",
            "description": "The followers list team filter.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The paginated list page.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "The paginated list limit.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "The list of rewards redemptions.",
            "schema": {
              "$ref": "#/definitions/RewardsRedemptions"
            },
            "headers": {
              "Link": {
                "description": "Pagination links in conformance with RFC 5988.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "collectionFormat": "csv"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 2,
                  "fulfilled_at": null,
                  "reward_points_required": 50,
                  "created_at": "2017-02-09T08:33:22.000-05:00",
                  "state": "activated",
                  "reward": {
                    "id": 1,
                    "title": "Brand NEW Hot Tub!",
                    "description": "Made from Redwood",
                    "points_required": 50,
                    "starts_at": "2017-02-06T16:43:50.000-05:00",
                    "expires_at": "2017-12-06T16:43:50.000-05:00",
                    "image_attachment": {
                      "amplify_id": 13,
                      "url": "/system/attachments/development/photo_attachment_files/13/original/hot_tub.jpg"
                    }
                  },
                  "responses": [
                    {
                      "id": 2,
                      "response": "Red",
                      "question": {
                        "id": 1,
                        "question": "Which led color for tub? (default is white)"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      }
    },
    "/user/autoshare": {
      "get": {
        "tags": [
          "autoshares"
        ],
        "summary": "Shows requested autoshare.",
        "parameters": [
          {
            "name": "team_id",
            "in": "query",
            "description": "The autoshare team identifier.",
            "required": true,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "authentication_id",
            "in": "query",
            "description": "The autoshare authentication identifier.",
            "required": true,
            "type": "integer",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "The requested autoshare information.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Autoshare ID",
                  "description": "Autoshare identifier."
                }
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 1
                }
              ]
            }
          },
          "404": {
            "description": "The autoshare cannot be found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "autoshares"
        ],
        "summary": "Deletes requested autoshare for the user.",
        "parameters": [
          {
            "name": "team_id",
            "in": "query",
            "description": "The autoshare team identifier.",
            "required": true,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "authentication_id",
            "in": "query",
            "description": "The autoshare authentication identifier.",
            "required": true,
            "type": "integer",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "204": {
            "description": "The autoshare has been successfully deleted."
          },
          "404": {
            "description": "The autoshare cannot be found."
          }
        }
      }
    },
    "/user/autoshares": {
      "post": {
        "tags": [
          "autoshares"
        ],
        "summary": "Creates autoshare for user.",
        "description": "Creates an autoshare record for a particular authentication that will allow a member to autoshare activities associated with the afromentioned authentication.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The autoshare object to be created.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "authentications_autoshare": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Authentications/Autoshare"
                    },
                    {
                      "properties": {
                        "authentication_id": {
                          "type": "integer",
                          "title": "Authentication ID",
                          "description": "Authentication identifier"
                        }
                      }
                    }
                  ]
                },
                "team_id": {
                  "type": "integer",
                  "title": "Team ID",
                  "description": "Team identifier."
                }
              },
              "required": [
                "authentications_autoshare",
                "team_id"
              ],
              "example": {
                "team_id": 1,
                "authentications_autoshare": {
                  "authentication_id": 1
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The autoshare has been successfully created."
          },
          "422": {
            "description": "Validation Failed"
          }
        }
      }
    },
    "/user/destinations": {
      "post": {
        "tags": [
          "destinations"
        ],
        "summary": "Adds entity destination for the user.",
        "description": "Adds a page from among the available authentication entities for the currently authenticated user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The entity destinati object to be created.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "authentications_entities_destination": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Authentications/Entities/Destination"
                    },
                    {
                      "properties": {
                        "entity_id": {
                          "type": "integer",
                          "title": "Entity ID",
                          "description": "Entity identifier"
                        },
                        "entity_type": {
                          "type": "string",
                          "title": "Entity Type",
                          "description": "Identifiers whether entity is personal account or business page"
                        }
                      }
                    }
                  ]
                }
              },
              "required": [
                "authentications_entities_destination"
              ],
              "example": {
                "authentications_entities_destination": {
                  "entity_id": 1,
                  "entity_type": "FacebookPage"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The destination has been successfully created."
          }
        }
      }
    },
    "/users/{user_id}/followership": {
      "post": {
        "tags": [
          "followerships"
        ],
        "summary": "Adds the followership to the user.",
        "description": "Associates a user as followee to the currently authenticated user.",
        "responses": {
          "201": {
            "description": "The followership has been successfully created."
          }
        }
      },
      "delete": {
        "tags": [
          "followerships"
        ],
        "summary": "Removes the followership from the user.",
        "description": "Deassociates a user as followee from the currently authenticated user.",
        "responses": {
          "204": {
            "description": "The followership has been successfully deleted."
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/User"
        }
      ]
    },
    "/activities/{activity_id}/status": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Shows activity status for the user.",
        "description": "Shows the requested activity status for the currently authenticated user.",
        "parameters": [
          {
            "name": "activity_id",
            "in": "path",
            "description": "The activity scope (ID).",
            "required": true,
            "type": "integer"
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "The activity's status team filter.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "The requested activity's status.",
            "schema": {
              "$ref": "#/definitions/ActivitiesStatus"
            },
            "examples": {
              "application/json": [
                {
                  "id": 1,
                  "scheduled_at": null,
                  "autoshare": false,
                  "edited": false,
                  "edit_prefix": null,
                  "edit_infix": null,
                  "edit_suffix": null,
                  "feedback": true,
                  "feedback_response": "I did not like the activity text.",
                  "created_at": "2017-12-10T02:34:12.089-05:00",
                  "updated_at": "2017-12-10T03:52:11.102-05:00",
                  "state": "refused",
                  "state_at": "2017-12-10T03:52:11.102-05:00",
                  "activity": {
                    "id": 2,
                    "platform": "twitter",
                    "type": "Activity::Twitter::Tweet",
                    "team_id": 1,
                    "preview": "Another sample tweet",
                    "text": "Another sample tweet",
                    "link": null,
                    "link_title": null,
                    "link_description": null,
                    "hashtag": null,
                    "starts_at": "2017-12-09T10:32:11.000-04:00",
                    "expires_at": null,
                    "points": null,
                    "editable": false,
                    "commentable": false,
                    "mediable": false,
                    "redirecting": false,
                    "created_at": "2017-12-09T10:32:11.000-04:00",
                    "updated_at": "2017-12-09T10:32:11.000-04:00",
                    "preview_html": "<p>Another sample tweet</p>\n",
                    "text_html": "<p>Another sample tweet</p>\n",
                    "channel": null,
                    "suggested_channel": null,
                    "attachment": null
                  }
                }
              ]
            }
          },
          "404": {
            "description": "The activity status cannot be found.",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "activities"
        ],
        "summary": "Updates activity status for the user.",
        "description": "Updates the requested activity status for the currently authenticated user.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The activities status object to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "activities_status": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/ActivitiesStatus"
                    },
                    {
                      "properties": {
                        "state_event": {
                          "type": "string",
                          "title": "State Event",
                          "description": "Triggers an event that will alter the status of the associated activity.",
                          "enum": [
                            "refuse",
                            "approve"
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "required": [
                "activities_status"
              ],
              "example": {
                "activities_status": {
                  "state_event": "approve",
                  "edit_prefix": "This is great:",
                  "edit_suffix": "Do not miss it!"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The activity status has been successfully updated.",
            "schema": {
              "$ref": "#/definitions/ActivitiesStatus"
            },
            "examples": {
              "application/json": {
                "id": 1,
                "scheduled_at": null,
                "autoshare": false,
                "edited": false,
                "edit_prefix": null,
                "edit_infix": null,
                "edit_suffix": null,
                "feedback": false,
                "feedback_response": null,
                "created_at": "2017-11-28T02:57:34.079-05:00",
                "updated_at": "2017-11-28T03:59:17.107-05:00",
                "state": "approved"
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "examples": {
              "application/json": {
                "state_event": [
                  "cannot transition when refused"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "activities"
        ],
        "summary": "Resets activity status for the user.",
        "description": "Resets the requested activity status for the currently authenticated user.",
        "responses": {
          "204": {
            "description": "The activity status has been successfully reset."
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Activity"
        }
      ]
    },
    "/activities/amplify/{amplify_activity_id}/status": {
      "patch": {
        "tags": [
          "activities"
        ],
        "summary": "Updates Amplify activity status for the user.",
        "description": "Updates the requested Amplify activity status for the currently authenticated user.\n\nDepending on the activity type there are some additional requirements; (Twitter) share link activities require `text` parameter, question and comment activities require `response` parameter and Twitter retweet activities may require `comment` parameter, latter depending on the `commentable` attribute of the activity. Additionally, question activities, may require `include_link` and `include_attachment` parameters, depending on availability of the `link` and `attachment` attributes of the activity.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The activities status object to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "activities_status": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/ActivitiesStatus"
                    },
                    {
                      "properties": {
                        "state_event": {
                          "type": "string",
                          "title": "State Event",
                          "description": "Triggers an event that will alter the status of the associated activity.",
                          "enum": [
                            "refuse",
                            "approve"
                          ]
                        },
                        "text": {
                          "type": "string",
                          "title": "Text",
                          "description": "Required user input on (Twitter) share link activities."
                        },
                        "response": {
                          "type": "string",
                          "title": "Response",
                          "description": "Required user input on question and comment activities."
                        },
                        "include_link": {
                          "type": "boolean",
                          "title": "Include Link",
                          "description": "Indicates that activity link should be included in user response."
                        },
                        "include_attachment": {
                          "type": "boolean",
                          "title": "Include Link",
                          "description": "Indicates that activity attachment should be included in user response."
                        },
                        "comment": {
                          "type": "string",
                          "title": "Comment",
                          "description": "Required or optional user input on Twitter retweet activities."
                        }
                      }
                    }
                  ]
                }
              },
              "required": [
                "activities_status"
              ],
              "example": {
                "activities_status": {
                  "state_event": "approve",
                  "scheduled_at": "auto",
                  "edit_infix": "This message is better!"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The Amplify activity status has been successfully updated."
          },
          "422": {
            "description": "Validation Failed"
          }
        }
      },
      "delete": {
        "tags": [
          "activities"
        ],
        "summary": "Resets Amplify activity status for the user.",
        "description": "Resets the requested Amplify activity status for the currently authenticated user.",
        "responses": {
          "204": {
            "description": "The Amplify activity status has been successfully reset."
          }
        }
      },
      "parameters": [
        {
          "name": "amplify_activity_id",
          "in": "path",
          "description": "The Amplify activity scope (ID).",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/activities/amplify/{amplify_activity_id}/redirection": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Returns the Amplify member activity redirection URL.",
        "description": "Returns the activity redirection URL of the requested Amplify activity for the currently authenticated user.",
        "responses": {
          "204": {
            "description": "The Amplify activity redirection URL has been successfully returned.",
            "schema": {
              "type": "null"
            },
            "headers": {
              "Location": {
                "description": "The activity redirection URL in conformance with RFC 7231.",
                "type": "string"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "amplify_activity_id",
          "in": "path",
          "description": "The Amplify activity scope (ID).",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/activities/amplify": {
      "post": {
        "tags": [
          "activities"
        ],
        "summary": "Creates a new Amplify activity.",
        "description": "Creates a new Amplify activity.\n\nAn Amplify activity attachment must have been uploaded prior to the activity creation and will be connected to the activity object through the `attachment_id` request parameter.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The activity object to be created.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "activity": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Activity"
                    },
                    {
                      "properties": {
                        "channel_id": {
                          "type": "integer",
                          "title": "Channel ID",
                          "description": "Activity channel identifier."
                        },
                        "gaggle_id": {
                          "type": "integer",
                          "title": "Gaggle ID",
                          "description": "Amplify Gaggle integration identifier."
                        },
                        "campaign_id": {
                          "type": "integer",
                          "title": "Campaign ID",
                          "description": "Amplify campaign integration identifier."
                        },
                        "tag_id": {
                          "type": "integer",
                          "title": "Tag ID",
                          "description": "Amplify tag integration identifier."
                        }
                      }
                    }
                  ]
                },
                "attachment_id": {
                  "type": "integer",
                  "title": "Attachment ID",
                  "description": "Activity attachment identifier."
                }
              },
              "required": [
                "activity"
              ],
              "example": {
                "activity": {
                  "platform": "linkedin",
                  "text": "The best activity ever"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The Amplify activity has been successfully created.",
            "schema": {
              "$ref": "#/definitions/Activity"
            },
            "examples": {
              "application/json": {
                "amplify_id": 3
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "examples": {
              "application/json": {
                "base": [
                  "This activity is a duplicate of another, active activity"
                ]
              }
            }
          }
        }
      }
    },
    "/activities/amplify/gaggles": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Shows Amplify activities Gaggles.",
        "description": "Shows the list of Amplify activities Gaggles.",
        "responses": {
          "200": {
            "description": "The list of Amplify activities Gaggles.",
            "schema": {
              "$ref": "#/definitions/Gaggles"
            },
            "examples": {
              "application/json": [
                {
                  "amplify_id": 3,
                  "name": "GaggleAMP",
                  "logo_url": "https://s3.amazonaws.com/gaggleamp-amplify/organization_logos/3/small/logo.png",
                  "invitation_url": "http://gaggleamp.com/i/abcd123"
                }
              ]
            }
          }
        }
      }
    },
    "/activities/amplify/gaggles/{amplify_activities_gaggle_id}/campaigns": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Shows Amplify activities Gaggle campaigns.",
        "description": "Shows the list of Amplify activities Gaggle campaigns.",
        "responses": {
          "200": {
            "description": "The list of Amplify activities Gaggle campaigns.",
            "schema": {
              "$ref": "#/definitions/Campaigns"
            },
            "examples": {
              "application/json": [
                {
                  "amplify_id": 2,
                  "name": "AutoAMP"
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "name": "amplify_activities_gaggle_id",
          "in": "path",
          "description": "The Amplify activities Gaggle scope (ID).",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/activities/amplify/gaggles/{amplify_activities_gaggle_id}/tags": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Shows Amplify activities Gaggle tags.",
        "description": "Shows the list of Amplify activities Gaggle tags.",
        "responses": {
          "200": {
            "description": "The list of Amplify activities Gaggle tags.",
            "schema": {
              "$ref": "#/definitions/Tags"
            },
            "examples": {
              "application/json": [
                {
                  "amplify_id": 1,
                  "name": "Marketing"
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "name": "amplify_activities_gaggle_id",
          "in": "path",
          "description": "The Amplify activities Gaggle scope (ID).",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/activities/amplify/gaggles/{amplify_activities_gaggle_id}/channels": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Shows Amplify activities Gaggle channels.",
        "description": "Shows the list of Amplify activities Gaggle channels.",
        "responses": {
          "200": {
            "description": "The list of Amplify activities Gaggle channels.",
            "schema": {
              "$ref": "#/definitions/Channels"
            },
            "examples": {
              "application/json": [
                {
                  "id": 3,
                  "name": "Awesome Posts",
                  "description": "Lorem ipsum dolor sit amet.",
                  "viewership": "public",
                  "authorship": "curated"
                },
                {
                  "id": 2,
                  "name": "The unbelievable category",
                  "description": "Lorem ipsum dolor sit amet.",
                  "viewership": "private",
                  "authorship": "open"
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "name": "amplify_activities_gaggle_id",
          "in": "path",
          "description": "The Amplify activities Gaggle scope (ID).",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/teams/{team_id}/membership": {
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Updates the team membership of user.",
        "description": "Updates the team membership under the specified team scope of the currently authenticated user.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The membership object to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "membership": {
                  "type": "object",
                  "properties": {
                    "leaderboard": {
                      "type": "boolean",
                      "title": "Leaderboard",
                      "description": "Membership user ranking participation."
                    },
                    "enable_individual_tracking": {
                      "type": "boolean",
                      "title": "Enable Individual Tracking",
                      "description": "Indicate Individual member tracking."
                    }
                  }
                }
              },
              "required": [
                "membership"
              ],
              "example": {
                "membership": {
                  "leaderboard": true,
                  "enable_individual_tracking": true
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The membership has been successfully updated."
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Team"
        }
      ]
    },
    "/teams/{team_id}/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Shows team users.",
        "description": "Shows the list of team users paginated.",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "The users list query filter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "exclude_channel_id",
            "in": "query",
            "description": "The users list excluding channels subscribers filter.",
            "required": false,
            "type": "array",
            "allowEmptyValue": false,
            "items": {
              "type": "integer"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "sort_column",
            "in": "query",
            "description": "The users list sort column.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "default": "first_name",
            "enum": [
              "first_name",
              "last_name",
              "title"
            ]
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "The users list sort direction.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "default": "asc",
            "enum": [
              "asc",
              "desc"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "The paginated list page.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "The paginated list limit.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "The list of team users.",
            "schema": {
              "$ref": "#/definitions/Users"
            },
            "headers": {
              "Link": {
                "description": "Pagination links in conformance with RFC 5988.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "collectionFormat": "csv"
              },
              "X-Total-Count": {
                "description": "Total records count custom header.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 1,
                  "name": "Terry Sanders",
                  "title": "Customer Support",
                  "time_zone": "Eastern Time (US & Canada)",
                  "image": "https://accounts.gaggleamp.com/avatars/67fd4fbfe9aa4329ffe6158d94354926ae6429c7?1513768281",
                  "followees_count": 0,
                  "followers_count": 1,
                  "current_team_membership": {
                    "id": 2,
                    "role": "manager",
                    "membership_status": "approved",
                    "created_at": "2016-03-19T09:28:32.001-05:00",
                    "posts_count": 2,
                    "subscriptions_count": 1
                  }
                },
                {
                  "id": 2,
                  "name": "John Doe",
                  "title": "Unknown",
                  "time_zone": "Eastern Time (US & Canada)",
                  "image": "https://accounts.gaggleamp.com/avatars/97fd4fbfe9444af9ffe0ee6d94354926ae6429c8?1513738381",
                  "followees_count": 1,
                  "followers_count": 0,
                  "current_team_membership": {
                    "id": 3,
                    "role": "member",
                    "membership_status": "approved",
                    "created_at": "2016-04-05T03:22:22.023-05:00",
                    "posts_count": 0,
                    "subscriptions_count": 1
                  }
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Team"
        }
      ]
    },
    "/teams/{team_id}/users/ranking": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Shows the team user ranking (leaderboard).",
        "description": "Shows the team user ranking (leaderboard), paginated.\n\nThe default `points` scope projects user ranking (leaderboard) by their reward points, while the `reach` scope projects user ranking by their activities accumulated reach.\n\nThe default user ranking period is 90 days, but that time range can be customized by the `committed_at_begin` and `committed_at_end` parameters, accepting timestamps in Unix epoch milliseconds.",
        "parameters": [
          {
            "name": "scope",
            "in": "query",
            "description": "The user ranking scope.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "default": "points",
            "enum": [
              "points",
              "reach"
            ]
          },
          {
            "name": "committed_at_begin",
            "in": "query",
            "description": "The score commitment time range filter beginning.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "committed_at_end",
            "in": "query",
            "description": "The score commitment time range filter ending.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The paginated list page.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "The paginated list limit.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "The team user ranking.",
            "schema": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/definitions/User"
                  },
                  {
                    "properties": {
                      "rank": {
                        "type": [
                          "integer",
                          "null"
                        ],
                        "title": "Rank",
                        "description": "The team user leaderboard rank.",
                        "readOnly": true
                      },
                      "score": {
                        "type": "integer",
                        "title": "Score",
                        "description": "The team user leaderboard score.",
                        "readOnly": true
                      }
                    }
                  }
                ]
              }
            },
            "headers": {
              "Link": {
                "description": "Pagination links in conformance with RFC 5988.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "collectionFormat": "csv"
              },
              "X-Total-Count": {
                "description": "Total records count custom header.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 2,
                  "name": "John Doe",
                  "title": "Unknown",
                  "time_zone": "Eastern Time (US & Canada)",
                  "image": "https://accounts.gaggleamp.com/avatars/97fd4fbfe9444af9ffe0ee6d94354926ae6429c8?1513738381",
                  "followees_count": 1,
                  "followers_count": 0,
                  "rank": 1,
                  "score": 155
                },
                {
                  "id": 1,
                  "name": "Terry Sanders",
                  "title": "Customer Support",
                  "time_zone": "Eastern Time (US & Canada)",
                  "image": "https://accounts.gaggleamp.com/avatars/67fd4fbfe9aa4329ffe6158d94354926ae6429c7?1513768281",
                  "followees_count": 0,
                  "followers_count": 1,
                  "rank": 2,
                  "score": 130
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Team"
        }
      ]
    },
    "/teams/{team_id}/users/groups": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "list the teams user groups.",
        "description": "Shows the list of team available user groups.",
        "responses": {
          "200": {
            "description": "The list of team available user groups.",
            "schema": {
              "$ref": "#/definitions/UsersGroups"
            },
            "examples": {
              "application/json": [
                {
                  "id": 1,
                  "name": "Testers"
                },
                {
                  "id": 2,
                  "name": "Developers"
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Team"
        }
      ]
    },
    "/teams/{team_id}/channels": {
      "get": {
        "tags": [
          "channels"
        ],
        "summary": "Shows team available channels.",
        "description": "Shows the list of team available channels, including the global, public and user subscribed channels, paginated.",
        "parameters": [
          {
            "name": "scope",
            "in": "query",
            "description": "The channels list scope.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "default": "all",
            "enum": [
              "all",
              "active",
              "subscribed",
              "pending",
              "rejected"
            ]
          },
          {
            "name": "order",
            "in": "query",
            "description": "The channels list sorting order.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "default": "latest",
            "enum": [
              "latest",
              "trending",
              "alphabetical",
              "recent"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "The paginated list page.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "The paginated list limit.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "The list of team available channels.",
            "schema": {
              "$ref": "#/definitions/Channels"
            },
            "headers": {
              "Link": {
                "description": "Pagination links in conformance with RFC 5988.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "collectionFormat": "csv"
              },
              "X-Total-Count": {
                "description": "Total records count custom header.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 3,
                  "name": "Awesome Posts",
                  "description": "Lorem ipsum dolor sit amet.",
                  "slug": "awesome",
                  "starts_at": "2017-02-09T19:48:36.002-05:00",
                  "expires_at": "2017-03-09T19:48:36.002-05:00",
                  "viewership": "public",
                  "authorship": "curated",
                  "posts_count": 1,
                  "subscriptions_count": 2,
                  "subscribers_count": 1,
                  "image_attachment": {
                    "id": 3,
                    "url": "/system/attachment/images/assets/000/000/003/original/banner.jpg?1490949057"
                  },
                  "icon": {
                    "id": 2,
                    "url": "/system/attachment/images/assets/000/000/002/icon/GaggleAMP.png?1490949057"
                  },
                  "administrators": [
                    {
                      "id": 1,
                      "name": "Terry Sanders",
                      "title": "Customer Support",
                      "time_zone": "Eastern Time (US & Canada)",
                      "image": "https://accounts.gaggleamp.com/avatars/67fd4fbfe9aa4329ffe6158d94354926ae6429c7?1513768281"
                    }
                  ]
                },
                {
                  "id": 2,
                  "name": "The unbelievable category",
                  "description": "Lorem ipsum dolor sit amet.",
                  "slug": null,
                  "starts_at": null,
                  "expires_at": null,
                  "viewership": "private",
                  "authorship": "open",
                  "posts_count": 1,
                  "subscriptions_count": 2,
                  "subscribers_count": 2,
                  "administrators": [
                    {
                      "id": 1,
                      "name": "Terry Sanders",
                      "title": "Customer Support",
                      "image": "https://accounts.gaggleamp.com/avatars/67fd4fbfe9aa4329ffe6158d94354926ae6429c7?1513768281"
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "post": {
        "tags": [
          "channels"
        ],
        "summary": "Creates a new channel.",
        "description": "Creates a new channel under the specified team scope.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The channel object to be created.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "channel": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Channel"
                    },
                    {
                      "properties": {
                        "image_attachment_attributes": {
                          "type": "object"
                        },
                        "icon_attributes": {
                          "type": "object"
                        }
                      }
                    }
                  ]
                },
                "image_attachment_id": {
                  "type": "integer",
                  "title": "Image Attachment ID",
                  "description": "Channel banner identifier."
                },
                "icon_id": {
                  "type": "integer",
                  "title": "Icon ID",
                  "description": "Channel icon identifier."
                }
              },
              "required": [
                "channel"
              ],
              "example": {
                "channel": {
                  "name": "My new channel",
                  "description": "Lorem ipsum dolor sit amet.",
                  "slug": "awesome",
                  "starts_at": "2017-02-09T19:48:36.002-05:00",
                  "expires_at": "2017-03-09T19:48:36.002-05:00",
                  "viewership": "public",
                  "authorship": "curated"
                },
                "image_attachment_id": 3,
                "icon_id": 2
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The channel has been successfully created.",
            "schema": {
              "$ref": "#/definitions/Channel"
            },
            "examples": {
              "application/json": {
                "id": 3,
                "name": "My new channel",
                "description": "Lorem ipsum dolor sit amet.",
                "slug": "awesome",
                "starts_at": "2017-02-09T19:48:36.002-05:00",
                "expires_at": "2017-03-09T19:48:36.002-05:00",
                "viewership": "public",
                "authorship": "curated",
                "posts_count": 0,
                "subscriptions_count": 1,
                "subscribers_count": 1,
                "image_attachment": {
                  "id": 3,
                  "url": "/system/attachment/images/assets/000/000/003/original/banner.jpg?1490949057"
                },
                "icon": {
                  "id": 2,
                  "url": "/system/attachment/images/assets/000/000/002/icon/GaggleAMP.png?1490949057"
                },
                "administrators": [
                  {
                    "id": 1,
                    "name": "Terry Sanders",
                    "title": "Customer Support",
                    "image": "https://accounts.gaggleamp.com/avatars/67fd4fbfe9aa4329ffe6158d94354926ae6429c7?1513768281"
                  }
                ]
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "examples": {
              "application/json": {
                "name": [
                  "can't be blank"
                ]
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Team"
        }
      ]
    },
    "/teams/{team_id}/channels/new": {
      "get": {
        "tags": [
          "channels"
        ],
        "summary": "Fetches validity information for a new channel.",
        "description": "Fetches validity information for a new channel based on its name and viewership properties.",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "The channel name.",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "viewership",
            "in": "query",
            "description": "The channel viewership status.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "default": "public",
            "enum": [
              "private",
              "restricted",
              "public",
              "global"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "The channel is valid.",
            "schema": {
              "type": "null"
            }
          },
          "422": {
            "description": "Validation Failed",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "examples": {
              "application/json": {
                "name": [
                  "has already been taken"
                ]
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Team"
        }
      ]
    },
    "/channels/{id}": {
      "get": {
        "tags": [
          "channels"
        ],
        "summary": "Shows the requested team channel.",
        "description": "Shows the requested team channel.",
        "responses": {
          "200": {
            "description": "The requested team channel object.",
            "schema": {
              "$ref": "#/definitions/Channel"
            },
            "examples": {
              "application/json": {
                "id": 3,
                "name": "Awesome Posts",
                "description": "Lorem ipsum dolor sit amet.",
                "slug": "awesome",
                "starts_at": "2017-02-09T19:48:36.002-05:00",
                "expires_at": "2017-03-09T19:48:36.002-05:00",
                "viewership": "public",
                "authorship": "curated",
                "posts_count": 1,
                "subscriptions_count": 2,
                "subscribers_count": 1,
                "image_attachment": {
                  "id": 3,
                  "url": "/system/attachment/images/assets/000/000/003/original/banner.jpg?1490949057"
                },
                "icon": {
                  "id": 2,
                  "url": "/system/attachment/images/assets/000/000/002/icon/GaggleAMP.png?1490949057"
                },
                "administrators": [
                  {
                    "id": 1,
                    "name": "Terry Sanders",
                    "title": "Customer Support",
                    "image": "https://accounts.gaggleamp.com/avatars/67fd4fbfe9aa4329ffe6158d94354926ae6429c7?1513768281"
                  }
                ]
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "channels"
        ],
        "summary": "Updates a team channel.",
        "description": "Updates the specified team channel.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The channel object to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "channel": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Channel"
                    },
                    {
                      "properties": {
                        "image_attachment_attributes": {
                          "type": "object"
                        },
                        "icon_attributes": {
                          "type": "object"
                        }
                      }
                    }
                  ]
                },
                "image_attachment_id": {
                  "type": "integer",
                  "title": "Image Attachment ID",
                  "description": "Channel banner identifier."
                },
                "icon_id": {
                  "type": "integer",
                  "title": "Icon ID",
                  "description": "Channel icon identifier."
                }
              },
              "required": [
                "channel"
              ],
              "example": {
                "channel": {
                  "name": "My updated channel",
                  "description": "Lorem ipsum dolor sit amet.",
                  "slug": "awesome",
                  "starts_at": "2017-02-09T19:48:36.002-05:00",
                  "expires_at": "2017-03-09T19:48:36.002-05:00",
                  "viewership": "public",
                  "authorship": "curated"
                },
                "image_attachment_id": 3
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The channel has been successfully updated.",
            "schema": {
              "$ref": "#/definitions/Channel"
            },
            "examples": {
              "application/json": {
                "id": 3,
                "name": "My updated channel",
                "description": "Lorem ipsum dolor sit amet.",
                "slug": "awesome",
                "starts_at": "2017-02-09T19:48:36.002-05:00",
                "expires_at": "2017-03-09T19:48:36.002-05:00",
                "viewership": "public",
                "authorship": "curated",
                "posts_count": 0,
                "subscriptions_count": 1,
                "subscribers_count": 1,
                "image_attachment": {
                  "id": 3,
                  "url": "/system/attachment/images/assets/000/000/003/original/banner.jpg?1490949057"
                },
                "icon": {
                  "id": 2,
                  "url": "/system/attachment/images/assets/000/000/002/icon/GaggleAMP.png?1490949057"
                },
                "administrators": [
                  {
                    "id": 1,
                    "name": "Terry Sanders",
                    "title": "Customer Support",
                    "image": "https://accounts.gaggleamp.com/avatars/67fd4fbfe9aa4329ffe6158d94354926ae6429c7?1513768281"
                  }
                ]
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "examples": {
              "application/json": {
                "name": [
                  "can't be blank"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "channels"
        ],
        "summary": "Deletes the requested channel and its associated data.",
        "description": "Deletes the requested channel.",
        "responses": {
          "204": {
            "description": "The channel has been successfully deleted."
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The requested channel.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/channels/{channel_id}/subscriptions": {
      "get": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Shows the channel subscriptions.",
        "description": "Shows the list of channel subscriptions paginated.",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "The channel subscriptions list user query filter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The paginated list page.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "The paginated list limit.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "The list of channel subscriptions.",
            "schema": {
              "$ref": "#/definitions/Subscriptions"
            },
            "headers": {
              "Link": {
                "description": "Pagination links in conformance with RFC 5988.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "collectionFormat": "csv"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 4,
                  "tier": "administrator",
                  "invitation": null,
                  "notifications_setting": "mute",
                  "created_at": "2017-02-09T19:48:36.021-05:00",
                  "user": {
                    "id": 1,
                    "name": "Terry Sanders",
                    "title": "Customer Support",
                    "time_zone": "Eastern Time (US & Canada)",
                    "image": "https://accounts.gaggleamp.com/avatars/67fd4fbfe9aa4329ffe6158d94354926ae6429c7?1513768281"
                  }
                },
                {
                  "id": 3,
                  "tier": "spectator",
                  "invitation": "pending",
                  "notifications_setting": "enabled",
                  "created_at": "2017-02-09T19:44:33.011-05:00",
                  "user": {
                    "id": 1,
                    "name": "John Doe",
                    "title": "Unknown",
                    "time_zone": "Eastern Time (US & Canada)",
                    "image": "https://accounts.gaggleamp.com/avatars/97fd4fbfe9444af9ffe0ee6d94354926ae6429c8?1513738381"
                  }
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Channel"
        }
      ]
    },
    "/channels/{channel_id}/subscription": {
      "post": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Creates a new channel subscription for user.",
        "description": "Creates a new subscription under the specified channel scope for the currently authenticated user.",
        "responses": {
          "201": {
            "description": "The subscription has been successfully created."
          },
          "403": {
            "description": "The subscription is not allowed."
          },
          "404": {
            "description": "The channel cannot be found."
          },
          "409": {
            "description": "User already subscribed to channel."
          }
        }
      },
      "patch": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Updates the channel subscription of user.",
        "description": "Updates the channel subscription under the specified channel scope of the currently authenticated user.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The subscription object to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "subscription": {
                  "type": "object",
                  "properties": {
                    "invitation": {
                      "type": "string",
                      "title": "Invitation",
                      "description": "Subscription invitation status.",
                      "enum": [
                        "rejected",
                        "accepted"
                      ]
                    },
                    "notifications_setting": {
                      "type": "string",
                      "title": "Notifications Setting",
                      "description": "Subscription notifications setting.",
                      "enum": [
                        "enabled",
                        "mute_email",
                        "mute_mobile",
                        "mute"
                      ]
                    }
                  }
                }
              },
              "required": [
                "subscription"
              ],
              "example": {
                "subscription": {
                  "invitation": "accepted",
                  "notifications_setting": "mute"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The subscription has been successfully updated."
          },
          "404": {
            "description": "The subscription cannot be found."
          }
        }
      },
      "delete": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Deletes a channel subscription of user.",
        "description": "Deletes the channel subscription under the specified channel scope of the currently authenticated user.",
        "responses": {
          "204": {
            "description": "The subscription has been successfully deleted."
          },
          "404": {
            "description": "The subscription cannot be found."
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Channel"
        }
      ]
    },
    "/channels/{channel_id}/invitations": {
      "get": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Shows the channel subscription invitations.",
        "description": "Shows the list of subscription invitations under the specified channel scope, paginated.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The paginated list page.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "The paginated list limit.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "The list of subscription invitations under the specified channel scope.",
            "schema": {
              "$ref": "#/definitions/Invitations"
            },
            "headers": {
              "Link": {
                "description": "Pagination links in conformance with RFC 5988.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "collectionFormat": "csv"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 4,
                  "tier": "administrator",
                  "invitation": "rejected",
                  "notifications_setting": "enabled",
                  "created_at": "2017-02-09T19:48:36.021-05:00",
                  "user": {
                    "id": 1,
                    "name": "Terry Sanders",
                    "title": "Customer Support",
                    "time_zone": "Eastern Time (US & Canada)",
                    "image": "https://accounts.gaggleamp.com/avatars/67fd4fbfe9aa4329ffe6158d94354926ae6429c7?1513768281"
                  }
                },
                {
                  "id": 3,
                  "tier": "spectator",
                  "invitation": "pending",
                  "notifications_setting": "enabled",
                  "created_at": "2017-02-09T19:44:33.011-05:00",
                  "user": {
                    "id": 1,
                    "name": "John Doe",
                    "title": "Unknown",
                    "time_zone": "Eastern Time (US & Canada)",
                    "image": "https://accounts.gaggleamp.com/avatars/97fd4fbfe9444af9ffe0ee6d94354926ae6429c8?1513738381"
                  }
                }
              ]
            }
          }
        }
      },
      "post": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Creates a new subscription invitation.",
        "description": "Creates a new subscription invitation under the specified channel scope.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The subscription object to be created.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "subscription": {
                  "type": "object",
                  "properties": {
                    "subscriber_id": {
                      "type": "integer",
                      "title": "Subscriber ID",
                      "description": "Subscriber identifier."
                    },
                    "tier": {
                      "type": "string",
                      "title": "Tier",
                      "description": "Subscription tier.",
                      "enum": [
                        "spectator",
                        "contributor",
                        "moderator",
                        "administrator"
                      ]
                    }
                  }
                }
              },
              "required": [
                "subscription"
              ],
              "example": {
                "subscription": {
                  "subscriber_id": 1,
                  "tier": "moderator"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The subscription invitation has been successfully created.",
            "schema": {
              "$ref": "#/definitions/Subscription"
            },
            "examples": {
              "application/json": {
                "id": 3,
                "tier": "moderator",
                "invitation": "pending",
                "notifications_setting": "enabled",
                "created_at": "2017-02-09T19:44:33.011-05:00",
                "user": {
                  "id": 1,
                  "name": "John Doe",
                  "title": "Unknown",
                  "time_zone": "Eastern Time (US & Canada)",
                  "image": "https://accounts.gaggleamp.com/avatars/97fd4fbfe9444af9ffe0ee6d94354926ae6429c8?1513738381"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "examples": {
              "application/json": {
                "subscriber": [
                  "has already been taken"
                ]
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Channel"
        }
      ]
    },
    "/subscriptions/{id}": {
      "delete": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Deletes the requested channel subscription / invitation.",
        "description": "Deletes the requested channel subscription / invitation.",
        "responses": {
          "204": {
            "description": "The subscription has been successfully deleted."
          },
          "404": {
            "description": "The subscription cannot be found."
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The requested subscription.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/teams/{team_id}/posts": {
      "get": {
        "tags": [
          "posts"
        ],
        "summary": "Shows filtered and sorted published posts.",
        "description": "Shows the list of published posts under the specified team scope, sorted by requested order, filtered by requested channel and/or author and paginated.\n\nThe `feed` scope projects posts only from the subscribed channels or authored by the followees of the currently authenticated user, while the default `stream` scope projects all the rest accessible posts by the currently authenticated user. The `all` scope projects all posts.\n\nPosts may be sorted either with the default `trending` order which balances post votes and maturity, or with the `popular` and `recent` orders based only on one of the aforementioned dimensions.",
        "parameters": [
          {
            "name": "scope",
            "in": "query",
            "description": "The posts list scope.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "default": "all",
            "enum": [
              "all",
              "stream",
              "feed",
              "recommended"
            ]
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "The posts list sorting order.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "default": "by_start_time",
            "enum": [
              "by_start_time",
              "by_comments_count",
              "by_likes_count"
            ]
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "The posts list sort direction.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "default": "desc",
            "enum": [
              "desc",
              "asc"
            ]
          },
          {
            "name": "channel_id",
            "in": "query",
            "description": "The posts list channels filter.",
            "required": false,
            "type": "array",
            "allowEmptyValue": false,
            "items": {
              "type": "integer"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The posts list user authors filter.",
            "required": false,
            "type": "array",
            "allowEmptyValue": false,
            "items": {
              "type": "integer"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "author_ids",
            "in": "query",
            "description": "The posts list author filter.",
            "required": false,
            "type": "array",
            "allowEmptyValue": false,
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "created_at_begin",
            "in": "query",
            "description": "The posts list created_at begin time (unix time) filter.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "created_at_end",
            "in": "query",
            "description": "The posts list created_at end time (unix time) filter.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "channel_ids",
            "in": "query",
            "description": "The posts list channel filter.",
            "required": false,
            "type": "array",
            "allowEmptyValue": false,
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The paginated list page.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "The paginated list limit.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "The list of published posts under the requested scope and order.",
            "schema": {
              "$ref": "#/definitions/Posts"
            },
            "headers": {
              "Link": {
                "description": "Pagination links in conformance with RFC 5988.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "collectionFormat": "csv"
              },
              "X-Total-Count": {
                "description": "Total records count custom header.",
                "type": "integer"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 3,
                  "team_id": 1,
                  "text": "Lorem ipsum dolor sit amet.",
                  "link": "http://www.example.com/",
                  "link_title": "Example Domain",
                  "link_description": "This domain is established to be used for illustrative examples in documents.",
                  "publishable": true,
                  "published_at": "2017-02-09T19:48:36.002-05:00",
                  "created_at": "2017-02-09T19:48:36.021-05:00",
                  "updated_at": "2017-02-09T19:48:36.021-05:00",
                  "comments_count": 1,
                  "votes_count": 2,
                  "rank": 389.7924,
                  "author": {
                    "id": 1,
                    "type": "User",
                    "name": "Terry Sanders",
                    "description": "Customer Support",
                    "image_url": "https://accounts.gaggleamp.com/avatars/67fd4fbfe9aa4329ffe6158d94354926ae6429c7?1513768281"
                  },
                  "channel": {
                    "id": 1,
                    "name": "Awesome Posts",
                    "slug": "awesome",
                    "viewership": "public",
                    "icon_url": "/system/attachment/images/assets/000/000/001/icon/data?1493032545"
                  },
                  "text_html": "<p>Lorem ipsum dolor sit amet.</p>\n"
                },
                {
                  "id": 2,
                  "team_id": 1,
                  "text": "This is an awesome service!",
                  "link": null,
                  "link_title": null,
                  "link_description": null,
                  "publishable": true,
                  "published_at": "2017-02-08T08:13:52.311-05:00",
                  "created_at": "2017-02-08T08:13:52.319-05:00",
                  "updated_at": "2017-02-08T08:13:52.319-05:00",
                  "comments_count": 2,
                  "votes_count": 3,
                  "rank": 388.3692444,
                  "author": {
                    "id": 1,
                    "type": "User",
                    "name": "Terry Sanders",
                    "description": "Customer Support",
                    "image_url": "https://accounts.gaggleamp.com/avatars/67fd4fbfe9aa4329ffe6158d94354926ae6429c7?1513768281"
                  },
                  "channel": {
                    "id": 1,
                    "name": "Awesome Posts",
                    "slug": "awesome",
                    "viewership": "public",
                    "icon_url": "/system/attachment/images/assets/000/000/001/icon/data?1493032545"
                  },
                  "attachment": {
                    "id": 1,
                    "asset": {
                      "file_name": "data",
                      "content_type": "image/png",
                      "file_size": 2534,
                      "url": "/system/attachment/images/assets/000/000/001/original/data?1493032545",
                      "processing": false,
                      "thumbnail_url": "/system/attachment/images/assets/000/000/001/thumb/data?1493032545",
                      "small_url": "/system/attachment/images/assets/000/000/001/small/data?1493032545",
                      "medium_url": "/system/attachment/images/assets/000/000/001/medium/data?1493032545",
                      "large_url": "/system/attachment/images/assets/000/000/001/large/data?1493032545"
                    }
                  },
                  "text_html": "<p>This is an awesome service!</p>\n"
                }
              ]
            }
          }
        }
      },
      "post": {
        "tags": [
          "posts"
        ],
        "summary": "Creates a new post.",
        "description": "Creates a new post under the specified team scope.\n\nA post attachment must have been uploaded prior to the post creation and will be connected to the post object through the `attachment_id` request parameter. However, if a post features a URI set as a `link` attribute, the detected images URLs may be used directly on the post creation request leveraging the `attachment_attributes[asset_remote_url]` attribute.\n\nIn order to use the services posting feature, the currently authenticated user should have connected to their account the related authentication objects.\n\nWith the `publishable` parameter a post may be hidden from the team feeds, however the services posting feature must be use then.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The post object to be created.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "post": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Post"
                    },
                    {
                      "properties": {
                        "channel_id": {
                          "type": "integer",
                          "title": "Channel ID",
                          "description": "Post channel identifier."
                        },
                        "attachment_attributes": {
                          "type": "object",
                          "properties": {
                            "asset_remote_url": {
                              "type": "string",
                              "title": "Attachment asset remote URL",
                              "description": "Attachment image remote URL, which should be whitelisted by the new post endpoint."
                            }
                          }
                        },
                        "services": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "bitly",
                              "facebook",
                              "google",
                              "instagram",
                              "linkedin",
                              "microsoft",
                              "salesforce",
                              "slack",
                              "tiktok",
                              "twitter",
                              "vkontakte",
                              "yammer"
                            ]
                          },
                          "title": "Services",
                          "description": "User posting services of this post."
                        }
                      }
                    }
                  ]
                },
                "attachment_id": {
                  "type": "integer",
                  "title": "Attachment ID",
                  "description": "Post attachment identifier."
                }
              },
              "required": [
                "post"
              ],
              "example": {
                "post": {
                  "text": "Lorem ipsum dolor sit amet.",
                  "link": "http://www.example.com/",
                  "link_title": "Example Domain",
                  "link_description": "This domain is established to be used for illustrative examples in documents.",
                  "channel_id": 1,
                  "publishable": true,
                  "attachment_attributes": {
                    "asset_remote_url": "http://www.example.com/image.jpg"
                  },
                  "services": [
                    "twitter"
                  ]
                },
                "attachment_id": 1
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The post has been successfully created.",
            "schema": {
              "$ref": "#/definitions/Post"
            },
            "examples": {
              "application/json": {
                "id": 3,
                "team_id": 1,
                "text": "Lorem ipsum dolor sit amet.",
                "link": "http://www.example.com/",
                "link_title": "Example Domain",
                "link_description": "This domain is established to be used for illustrative examples in documents.",
                "publishable": true,
                "published_at": "2017-02-09T19:48:36.002-05:00",
                "created_at": "2017-02-09T19:48:36.021-05:00",
                "updated_at": "2017-02-09T19:48:36.021-05:00",
                "comments_count": 0,
                "votes_count": 0,
                "author": {
                  "id": 1,
                  "type": "User",
                  "name": "Terry Sanders",
                  "description": "Customer Support",
                  "image_url": "https://accounts.gaggleamp.com/avatars/67fd4fbfe9aa4329ffe6158d94354926ae6429c7?1513768281"
                },
                "channel": {
                  "id": 1,
                  "name": "Awesome Posts",
                  "slug": "awesome",
                  "viewership": "public",
                  "icon_url": "/system/attachment/images/assets/000/000/001/icon/data?1493032545"
                },
                "attachment": {
                  "id": 1,
                  "asset": {
                    "file_name": "data",
                    "content_type": "image/png",
                    "file_size": 2534,
                    "url": "/system/attachment/images/assets/000/000/001/original/data?1493032545",
                    "processing": true,
                    "thumbnail_url": "/system/attachment/images/assets/000/000/001/thumb/data?1493032545",
                    "small_url": "/assets/small/processing.png",
                    "medium_url": "/assets/medium/processing.png",
                    "large_url": "/assets/large/processing.png"
                  }
                },
                "text_html": "<p>Lorem ipsum dolor sit amet.</p>\n"
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "examples": {
              "application/json": {
                "text": [
                  "can't be blank"
                ]
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Team"
        }
      ]
    },
    "/teams/{team_id}/posts/new": {
      "get": {
        "tags": [
          "posts"
        ],
        "summary": "Fetches information for a new post.",
        "description": "Fetches information for a new post based on its link (URL) property.",
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "description": "The post content link.",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "The new pre-populated post object.",
            "schema": {
              "$ref": "#/definitions/Post"
            },
            "examples": {
              "application/json": {
                "link": "http://www.example.com/",
                "link_title": "Example page title",
                "link_description": "Lorem ipsum dolor sit amet.",
                "link_images": [
                  {
                    "url": "http://www.example.com/images/an-image.jpg",
                    "width": 250,
                    "height": 327,
                    "size": 24274,
                    "caption": null
                  }
                ]
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "posts"
        ],
        "summary": "Validates information of a new post.",
        "description": "Validates information of a new post based on its properties.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The post object to be validated.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "post": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Post"
                    },
                    {
                      "properties": {
                        "channel_id": {
                          "type": "integer",
                          "title": "Channel ID",
                          "description": "Post channel identifier."
                        },
                        "attachment_attributes": {
                          "type": "object",
                          "properties": {
                            "asset_remote_url": {
                              "type": "string",
                              "title": "Attachment asset remote URL",
                              "description": "Attachment image remote URL, which should be whitelisted by the new post endpoint."
                            }
                          }
                        },
                        "services": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "bitly",
                              "facebook",
                              "google",
                              "instagram",
                              "linkedin",
                              "microsoft",
                              "salesforce",
                              "slack",
                              "tiktok",
                              "twitter",
                              "vkontakte",
                              "yammer"
                            ]
                          },
                          "title": "Services",
                          "description": "User posting services of this post."
                        }
                      }
                    }
                  ]
                },
                "attachment_id": {
                  "type": "integer",
                  "title": "Attachment ID",
                  "description": "Post attachment identifier."
                }
              },
              "required": [
                "post"
              ],
              "example": {
                "post": {
                  "text": "Lorem ipsum dolor sit amet.",
                  "link": "http://www.example.com/",
                  "link_title": "Example Domain",
                  "link_description": "This domain is established to be used for illustrative examples in documents.",
                  "channel_id": 1,
                  "publishable": true,
                  "attachment_attributes": {
                    "asset_remote_url": "http://www.example.com/image.jpg"
                  },
                  "services": [
                    "twitter"
                  ]
                },
                "attachment_id": 1
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The post has been successfully validated."
          },
          "422": {
            "description": "Validation Failed",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "examples": {
              "application/json": {
                "text": [
                  "can't be blank"
                ],
                "services[twitter].platform": [
                  "is not included in the list"
                ],
                "services[twitter].text": [
                  "can't be blank"
                ]
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Team"
        }
      ]
    },
    "/posts/{id}": {
      "get": {
        "tags": [
          "posts"
        ],
        "summary": "Shows the requested post.",
        "description": "Shows the requested post.",
        "responses": {
          "200": {
            "description": "The requested post object.",
            "schema": {
              "$ref": "#/definitions/Post"
            },
            "examples": {
              "application/json": {
                "id": 3,
                "team_id": 1,
                "text": "Lorem ipsum dolor sit amet.",
                "link": "http://www.example.com/",
                "link_title": "Example Domain",
                "link_description": "This domain is established to be used for illustrative examples in documents.",
                "publishable": true,
                "published_at": "2017-02-09T19:48:36.002-05:00",
                "created_at": "2017-02-09T19:48:36.021-05:00",
                "updated_at": "2017-02-09T19:48:36.021-05:00",
                "comments_count": 0,
                "votes_count": 0,
                "author": {
                  "id": 1,
                  "type": "User",
                  "name": "Terry Sanders",
                  "description": "Customer Support",
                  "image_url": "https://accounts.gaggleamp.com/avatars/67fd4fbfe9aa4329ffe6158d94354926ae6429c7?1513768281"
                },
                "channel": {
                  "id": 1,
                  "name": "Awesome Posts",
                  "slug": "awesome",
                  "viewership": "public",
                  "icon_url": "/system/attachment/images/assets/000/000/001/icon/data?1493032545"
                },
                "attachment": {
                  "id": 1,
                  "asset": {
                    "file_name": "data",
                    "content_type": "image/png",
                    "file_size": 2534,
                    "url": "/system/attachment/images/assets/000/000/001/original/data?1493032545",
                    "processing": false,
                    "thumbnail_url": "/system/attachment/images/assets/000/000/001/thumb/data?1493032545",
                    "small_url": "/system/attachment/images/assets/000/000/001/small/data?1493032545",
                    "medium_url": "/system/attachment/images/assets/000/000/001/medium/data?1493032545",
                    "large_url": "/system/attachment/images/assets/000/000/001/large/data?1493032545"
                  }
                },
                "text_html": "<p>Lorem ipsum dolor sit amet.</p>\n"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "posts"
        ],
        "summary": "Updates a drafted post.",
        "description": "Updates the specified drafted post.\n\nIn order to remove the attachment the `attachment_attributes[_destroy]` parameter has to be set true in combination to the attachment identifier in `attachment_attributes[id]`.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The post object to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "post": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Post"
                    },
                    {
                      "properties": {
                        "channel_id": {
                          "type": "integer",
                          "title": "Channel ID",
                          "description": "Post channel identifier."
                        },
                        "attachment_attributes": {
                          "type": "object",
                          "properties": {
                            "asset_remote_url": {
                              "type": "string",
                              "title": "Attachment asset remote URL",
                              "description": "Attachment image remote URL, which should be whitelisted by the new post endpoint."
                            },
                            "id": {
                              "type": "integer",
                              "title": "Attachment ID",
                              "description": "Post attachment identifier used ONLY in combination with `_destroy` in order to delete the attachment."
                            },
                            "_destroy": {
                              "type": "string",
                              "title": "Attachment deletion marker",
                              "description": "Marks the attachment for deletion. It should be ONLY used in combination with `id`."
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "attachment_id": {
                  "type": "integer",
                  "title": "Attachment ID",
                  "description": "Post attachment identifier."
                }
              },
              "required": [
                "post"
              ],
              "example": {
                "post": {
                  "text": "Lorem ipsum dolor sit amet.",
                  "link": "http://www.example.com/",
                  "link_title": "My updated post",
                  "link_description": "This domain is established to be used for illustrative examples in documents.",
                  "channel_id": 1,
                  "attachment_attributes": {
                    "asset_remote_url": "http://www.example.com/image.jpg"
                  }
                },
                "attachment_id": 1
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The post has been successfully updated.",
            "schema": {
              "$ref": "#/definitions/Post"
            },
            "examples": {
              "application/json": {
                "id": 3,
                "team_id": 1,
                "text": "Lorem ipsum dolor sit amet.",
                "link": "http://www.example.com/",
                "link_title": "My updated post",
                "link_description": "This domain is established to be used for illustrative examples in documents.",
                "publishable": true,
                "published_at": "2017-02-09T19:48:36.002-05:00",
                "created_at": "2017-02-09T19:48:36.021-05:00",
                "updated_at": "2017-02-09T19:48:36.021-05:00",
                "comments_count": 0,
                "votes_count": 0,
                "author": {
                  "id": 1,
                  "type": "User",
                  "name": "Terry Sanders",
                  "description": "Customer Support",
                  "image_url": "https://accounts.gaggleamp.com/avatars/67fd4fbfe9aa4329ffe6158d94354926ae6429c7?1513768281"
                },
                "channel": {
                  "id": 1,
                  "name": "Awesome Posts",
                  "slug": "awesome",
                  "viewership": "public",
                  "icon_url": "/system/attachment/images/assets/000/000/001/icon/data?1493032545"
                },
                "attachment": {
                  "id": 1,
                  "asset": {
                    "file_name": "data",
                    "content_type": "image/png",
                    "file_size": 2534,
                    "url": "/system/attachment/images/assets/000/000/001/original/data?1493032545",
                    "processing": false,
                    "thumbnail_url": "/system/attachment/images/assets/000/000/001/thumb/data?1493032545",
                    "small_url": "/system/attachment/images/assets/000/000/001/small/data?1493032545",
                    "medium_url": "/system/attachment/images/assets/000/000/001/medium/data?1493032545",
                    "large_url": "/system/attachment/images/assets/000/000/001/large/data?1493032545"
                  }
                },
                "text_html": "<p>Lorem ipsum dolor sit amet.</p>\n"
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "examples": {
              "application/json": {
                "text": [
                  "can't be blank"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "posts"
        ],
        "summary": "Deletes the requested non-published post.",
        "description": "Deletes the requested non-published post.",
        "responses": {
          "204": {
            "description": "The post has been successfully deleted."
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The requested post.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/posts/{post_id}/favorite": {
      "post": {
        "tags": [
          "posts"
        ],
        "summary": "Adds the post to the user favorites.",
        "description": "Adds the specified post to the favorites of the currently authenticated user.",
        "responses": {
          "201": {
            "description": "The post has been successfully added to user favorites."
          }
        }
      },
      "delete": {
        "tags": [
          "posts"
        ],
        "summary": "Removes the post from the user favorites.",
        "description": "Removes the specified post from the favorites of the currently authenticated user.",
        "responses": {
          "204": {
            "description": "The post has been successfully removed from user favorites."
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Post"
        }
      ]
    },
    "/posts/{post_id}/comments": {
      "get": {
        "tags": [
          "comments"
        ],
        "summary": "Shows the post comments.",
        "description": "Shows the list of comments under the specified post scope, paginated.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The paginated list page.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "The paginated list limit.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "The list of comments under the specified post scope.",
            "schema": {
              "$ref": "#/definitions/Comments"
            },
            "headers": {
              "Link": {
                "description": "Pagination links in conformance with RFC 5988.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "collectionFormat": "csv"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 3,
                  "text": "Lorem ipsum dolor sit amet.",
                  "excerpt": "Lorem ipsum dolor sit amet.",
                  "created_at": "2017-02-09T19:48:36.021-05:00",
                  "updated_at": "2017-02-09T19:48:36.021-05:00",
                  "user": {
                    "id": 1,
                    "name": "Terry Sanders",
                    "title": "Customer Support",
                    "time_zone": "Eastern Time (US & Canada)",
                    "image": "https://accounts.gaggleamp.com/avatars/67fd4fbfe9aa4329ffe6158d94354926ae6429c7?1513768281"
                  },
                  "text_html": "<p>Lorem ipsum dolor sit amet.</p>\n"
                },
                {
                  "id": 2,
                  "text": "This is my first comment!",
                  "created_at": "2017-02-08T08:13:52.319-05:00",
                  "updated_at": "2017-02-08T08:13:52.319-05:00",
                  "user": {
                    "id": 1,
                    "name": "Terry Sanders",
                    "title": "Customer Support",
                    "time_zone": "Eastern Time (US & Canada)",
                    "image": "https://accounts.gaggleamp.com/avatars/67fd4fbfe9aa4329ffe6158d94354926ae6429c7?1513768281"
                  },
                  "text_html": "<p>This is my first comment!</p>\n"
                }
              ]
            }
          }
        }
      },
      "post": {
        "tags": [
          "comments"
        ],
        "summary": "Creates a new post comment.",
        "description": "Creates a new comment under the specified post scope.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The comment object to be created.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "$ref": "#/definitions/Comment"
                }
              },
              "required": [
                "comment"
              ],
              "example": {
                "comment": {
                  "text": "Lorem ipsum dolor sit amet."
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The comment has been successfully created.",
            "schema": {
              "$ref": "#/definitions/Comment"
            },
            "examples": {
              "application/json": {
                "id": 3,
                "text": "Lorem ipsum dolor sit amet.",
                "created_at": "2017-02-09T19:48:36.021-05:00",
                "updated_at": "2017-02-09T19:48:36.021-05:00",
                "user": {
                  "id": 1,
                  "name": "Terry Sanders",
                  "title": "Customer Support",
                  "time_zone": "Eastern Time (US & Canada)",
                  "image": "https://accounts.gaggleamp.com/avatars/67fd4fbfe9aa4329ffe6158d94354926ae6429c7?1513768281"
                },
                "text_html": "<p>Lorem ipsum dolor sit amet.</p>\n"
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "examples": {
              "application/json": {
                "text": [
                  "can't be blank"
                ]
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Post"
        }
      ]
    },
    "/comments/{id}": {
      "patch": {
        "tags": [
          "comments"
        ],
        "summary": "Updates an existing comment.",
        "description": "Updates the specified comment.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The comment object to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "$ref": "#/definitions/Comment"
                }
              },
              "required": [
                "comment"
              ],
              "example": {
                "comment": {
                  "text": "My updated comment is this."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The comment has been successfully updated.",
            "schema": {
              "$ref": "#/definitions/Comment"
            },
            "examples": {
              "application/json": {
                "id": 3,
                "text": "My updated comment is this.",
                "created_at": "2017-02-09T19:48:36.021-05:00",
                "updated_at": "2017-02-09T19:48:36.021-05:00",
                "user": {
                  "id": 1,
                  "name": "Terry Sanders",
                  "title": "Customer Support",
                  "time_zone": "Eastern Time (US & Canada)",
                  "image": "https://accounts.gaggleamp.com/avatars/67fd4fbfe9aa4329ffe6158d94354926ae6429c7?1513768281"
                },
                "text_html": "<p>My updated comment is this.</p>\n"
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "examples": {
              "application/json": {
                "text": [
                  "can't be blank"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "comments"
        ],
        "summary": "Deletes a post comment.",
        "description": "Deletes the requested post comment.",
        "responses": {
          "204": {
            "description": "The comment has been successfully deleted."
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The requested comment.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/posts/{post_id}/votes": {
      "get": {
        "tags": [
          "votes"
        ],
        "summary": "Shows the post voters.",
        "description": "Shows the list of votes under the specified post scope, paginated.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The paginated list page.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "The paginated list limit.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "The list of votes under the specified post scope.",
            "schema": {
              "$ref": "#/definitions/Votes"
            },
            "headers": {
              "Link": {
                "description": "Pagination links in conformance with RFC 5988.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "collectionFormat": "csv"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 3,
                  "created_at": "2017-02-09T19:48:36.021-05:00",
                  "user": {
                    "id": 1,
                    "name": "Terry Sanders",
                    "title": "Customer Support",
                    "time_zone": "Eastern Time (US & Canada)",
                    "image": "https://accounts.gaggleamp.com/avatars/67fd4fbfe9aa4329ffe6158d94354926ae6429c7?1513768281"
                  }
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Post"
        }
      ]
    },
    "/posts/{post_id}/vote": {
      "post": {
        "tags": [
          "votes"
        ],
        "summary": "Casts the user vote on post.",
        "description": "Creates a new user vote under the specified post scope.",
        "responses": {
          "201": {
            "description": "The vote has been successfully created."
          }
        }
      },
      "delete": {
        "tags": [
          "votes"
        ],
        "summary": "Removes the user vote from post.",
        "description": "Deletes the user vote under the specified post scope.",
        "responses": {
          "204": {
            "description": "The vote has been successfully deleted."
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Post"
        }
      ]
    },
    "/posts/{post_id}/activities/amplify": {
      "post": {
        "tags": [
          "activities"
        ],
        "summary": "Creates a new post-based Amplify activity (promote post).",
        "description": "Creates a new Amplify activity under the specified (promoted) post scope.\n\nAn Amplify activity attachment different than that of the promoted post, must have been uploaded prior to the activity creation and will be connected to the activity object through the `attachment_id` request parameter.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The activity object to be created.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "activity": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Activity"
                    },
                    {
                      "properties": {
                        "channel_ids": {
                          "type": "array",
                          "title": "Channel IDs",
                          "description": "The Activity channels list.",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "gaggle_id": {
                          "type": "integer",
                          "title": "Gaggle ID",
                          "description": "Amplify Gaggle integration identifier."
                        },
                        "campaign_id": {
                          "type": "integer",
                          "title": "Campaign ID",
                          "description": "Amplify campaign integration identifier."
                        },
                        "member_group_ids": {
                          "type": "integer",
                          "title": "Member Group IDs",
                          "description": "The Activity member groups list.",
                          "items": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  ]
                },
                "attachment_id": {
                  "type": "integer",
                  "title": "Attachment ID",
                  "description": "Activity attachment identifier."
                }
              },
              "required": [
                "activity"
              ],
              "example": {
                "activity": {
                  "platform": "linkedin",
                  "channel_ids": [
                    1,
                    2,
                    3
                  ],
                  "member_group_ids": [
                    4,
                    5
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The Amplify activity has been successfully created.",
            "schema": {
              "$ref": "#/definitions/Activity"
            },
            "examples": {
              "application/json": {
                "amplify_id": 3
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "examples": {
              "application/json": {
                "base": [
                  "This activity is a duplicate of another, active activity"
                ]
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Post"
        }
      ]
    },
    "/teams/{team_id}/activities/statuses": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Show the list of member activity statuses for requested team.",
        "description": "Shows the list of activities statuses for the requested team.\n\nThe default `all` scope projects all accessible activities statuses by the currently authenticated user, while the `completed` scope for activities that have been successfully performed.",
        "responses": {
          "200": {
            "description": "The list of activities statuses.",
            "schema": {
              "$ref": "#/definitions/ActivitiesStatuses"
            },
            "examples": {
              "application/json": [
                {
                  "id": 2,
                  "scheduled_at": null,
                  "autoshare": false,
                  "edited": false,
                  "edit_prefix": null,
                  "edit_infix": null,
                  "edit_suffix": null,
                  "feedback": false,
                  "feedback_response": null,
                  "created_at": "2017-12-16T02:57:34.079-05:00",
                  "updated_at": "2017-12-16T03:59:17.107-05:00",
                  "state": "approved",
                  "state_at": "2017-12-16T03:59:17.107-05:00",
                  "activity": {
                    "id": 1,
                    "platform": "twitter",
                    "type": "Activity::Twitter::Tweet",
                    "team_id": 1,
                    "preview": "Sample tweet",
                    "text": "Sample tweet",
                    "link": null,
                    "link_title": null,
                    "link_description": null,
                    "hashtag": null,
                    "starts_at": "2017-12-08T11:39:13.000-05:00",
                    "expires_at": null,
                    "points": null,
                    "editable": false,
                    "commentable": false,
                    "mediable": false,
                    "redirecting": false,
                    "created_at": "2017-12-08T11:39:13.000-05:00",
                    "updated_at": "2017-12-08T11:39:13.000-05:00",
                    "preview_html": "<p>Sample tweet</p>\n",
                    "text_html": "<p>Sample tweet</p>\n",
                    "channel": {
                      "id": 1,
                      "name": "Awesome Posts",
                      "slug": "awesome",
                      "viewership": "public",
                      "icon_url": "/system/attachment/images/assets/000/000/001/icon/data?1493032545"
                    },
                    "suggested_channel": null,
                    "attachment": null
                  },
                  "user": {
                    "id": 1,
                    "name": "Terry Sanders",
                    "title": "Customer Support",
                    "time_zone": "Eastern Time (US & Canada)",
                    "image": "https://accounts.gaggleamp.com/avatars/67fd4fbfe9aa4329ffe6158d94354926ae6429c7?1513768281"
                  }
                }
              ]
            }
          },
          "404": {
            "description": "The team cannot be found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "name": "scope",
          "in": "query",
          "description": "The activities statuses list scope.",
          "required": false,
          "type": "string",
          "allowEmptyValue": false,
          "default": "all",
          "enum": [
            "all",
            "completed"
          ]
        },
        {
          "$ref": "#/parameters/Team"
        }
      ]
    },
    "/teams/{team_id}/rewards": {
      "get": {
        "tags": [
          "rewards"
        ],
        "summary": "Shows the available rewards.",
        "description": "Shows the list of team available rewards, paginated. Will display only eligible rewards for user, for example if user is not in the same user group as reward, it will be not returned",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The paginated list page.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "The paginated list limit.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter the rewards.",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "200": {
            "description": "The list of team available rewards.",
            "schema": {
              "$ref": "#/definitions/Rewards"
            },
            "headers": {
              "Link": {
                "description": "Pagination links in conformance with RFC 5988.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "collectionFormat": "csv"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 1,
                  "title": "Brand NEW Hot Tub!",
                  "description": "Made from Redwood",
                  "points_required": 50,
                  "starts_at": "2017-02-06T16:43:50.000-05:00",
                  "expires_at": "2017-12-06T16:43:50.000-05:00",
                  "image_attachment": {
                    "amplify_id": 13,
                    "url": "/system/attachments/development/photo_attachment_files/13/original/hot_tub.jpg"
                  },
                  "questions": [
                    {
                      "id": 1,
                      "question": "Which led color for tub? (default is white)"
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Team"
        }
      ]
    },
    "/rewards/{reward_id}/redemptions": {
      "post": {
        "tags": [
          "redemptions"
        ],
        "summary": "Redeems the specified reward for user.",
        "description": "Redeems the specified reward for the currently authenticated user.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The rewards redemption object to be created.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rewards_redemption": {
                  "$ref": "#/definitions/RewardsRedemption"
                }
              },
              "required": [
                "rewards_redemption"
              ],
              "example": {
                "rewards_redemption": {
                  "responses_attributes": [
                    {
                      "reward_question_id": 1,
                      "response": "Red"
                    }
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The reward has been successfully redeemed.",
            "schema": {
              "$ref": "#/definitions/RewardsRedemption"
            },
            "examples": {
              "application/json": {
                "id": 2,
                "fulfilled_at": null,
                "reward_points_required": 50,
                "created_at": "2017-02-09T08:33:22.000-05:00",
                "state": "activated",
                "reward": {
                  "id": 1,
                  "title": "Brand NEW Hot Tub!",
                  "description": "Made from Redwood",
                  "points_required": 50,
                  "starts_at": "2017-02-06T16:43:50.000-05:00",
                  "expires_at": "2017-12-06T16:43:50.000-05:00",
                  "image_attachment": {
                    "amplify_id": 13,
                    "url": "/system/attachments/development/photo_attachment_files/13/original/hot_tub.jpg"
                  }
                },
                "responses": [
                  {
                    "id": 2,
                    "response": "Red",
                    "question": {
                      "id": 1,
                      "question": "Which led color for tub? (default is white)"
                    }
                  }
                ]
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "examples": {
              "application/json": {
                "base": [
                  "not enough points"
                ]
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Reward"
        }
      ]
    },
    "/attachments": {
      "post": {
        "tags": [
          "attachments"
        ],
        "summary": "Uploads a media attachment asset.",
        "description": "Creates a new post media attachment with the uploaded asset.",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "attachment[name]",
            "in": "formData",
            "description": "The attachment optional name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "attachment[asset]",
            "in": "formData",
            "description": "The media attachment asset to be uploaded.",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "201": {
            "description": "The media attachment has been successfully created.",
            "schema": {
              "$ref": "#/definitions/Attachment"
            },
            "examples": {
              "application/json": {
                "id": 23,
                "asset": {
                  "file_name": "my_video.mov",
                  "type": "video/quicktime",
                  "file_size": 4537135,
                  "url": "/system/attachment/videos/assets/000/000/004/original/my_video.mov?1486981755",
                  "processing": false,
                  "thumbnail_url": "/system/attachment/videos/assets/000/000/004/thumb/my_video.jpg?1486981755",
                  "small_url": "/system/attachment/videos/assets/000/000/004/small/my_video.jpg?1486981755",
                  "medium_url": "/system/attachment/videos/assets/000/000/004/medium/my_video.jpg?1486981755",
                  "metadata": {
                    "duration": 100.59
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "examples": {
              "application/json": {
                "asset_duration": [
                  "must be less than or equal to 30"
                ]
              }
            }
          }
        }
      }
    },
    "/teams/{team_id}/announcements": {
      "get": {
        "tags": [
          "announcements"
        ],
        "summary": "Show the list of unread announcements for the current user.",
        "responses": {
          "200": {
            "description": "The requested announcements for the current user",
            "schema": {
              "$ref": "#/definitions/Announcements"
            },
            "examples": {
              "application/json": [
                {
                  "id": 1,
                  "data": {
                    "title": "Example title",
                    "url": "http://example.com",
                    "rendered_body": "<p>Example body</p>",
                    "summary": "Announcement Summary"
                  }
                }
              ]
            }
          },
          "404": {
            "description": "The team cannot be found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Team"
        }
      ]
    },
    "/announcements/{id}": {
      "delete": {
        "tags": [
          "announcements"
        ],
        "summary": "Marks the announcement as read for the current user.",
        "responses": {
          "204": {
            "description": "The announcement has been succesfully marked as read for the current user."
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The announcement identifier",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/teams/{team_id}/events": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Shows latest events.",
        "description": "Shows the list of events under the specified team scope, sorted in creation descending order and paginated.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The paginated list page.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "The paginated list limit.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "The list of events.",
            "schema": {
              "$ref": "#/definitions/Events"
            },
            "headers": {
              "Link": {
                "description": "Pagination links in conformance with RFC 5988.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "collectionFormat": "csv"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 14,
                  "team_id": 1,
                  "key": "post/vote/1",
                  "subject_id": 2,
                  "subject_type": "Post",
                  "action": "vote",
                  "actor_id": null,
                  "actor_type": null,
                  "data": {
                    "vote_id": 1,
                    "candidate_id": 2,
                    "voter_id": 11,
                    "candidate_title": null,
                    "candidate_excerpt": "Quidem tenetur ut dolor temporibus?",
                    "voter_name": "Harold Gulgowski III"
                  },
                  "created_at": "2017-02-09T19:57:32.183-05:00",
                  "message": "Terry Sanders liked Quidem tenetur ut dolor temporibus?"
                },
                {
                  "id": 13,
                  "team_id": 1,
                  "key": "post/create/3",
                  "subject_id": 3,
                  "subject_type": "Post",
                  "action": "create",
                  "actor_id": null,
                  "actor_type": null,
                  "data": {
                    "post_id": 3,
                    "user_id": 1,
                    "attachment_id": null,
                    "post_excerpt": "My newest post",
                    "user_name": "Terry Sanders"
                  },
                  "created_at": "2017-02-09T19:48:36.151-05:00",
                  "message": "Terry Sanders posted My newest post"
                },
                {
                  "id": 12,
                  "team_id": 1,
                  "key": "post/comment/8",
                  "subject_id": 2,
                  "subject_type": "Post",
                  "action": "comment",
                  "actor_id": null,
                  "actor_type": null,
                  "data": {
                    "comment_id": 8,
                    "post_id": 2,
                    "user_id": 1,
                    "attachment_id": null,
                    "post_excerpt": "In ratione nihil. Rerum aut eaque corrupti a.",
                    "user_name": "Terry Sanders",
                    "comment_excerpt": "Dolore et non. Voluptas qui labore ut. Iste!"
                  },
                  "created_at": "2017-02-08T08:13:52.358-05:00",
                  "message": "Terry Sanders commented on In ratione nihil. Rerum aut eaque corrupti a."
                },
                {
                  "id": 11,
                  "team_id": 1,
                  "key": "user/follow/14/15",
                  "subject_id": 14,
                  "subject_type": "User",
                  "action": "follow",
                  "actor_id": null,
                  "actor_type": null,
                  "data": {
                    "followee_id": 14,
                    "follower_id": 15,
                    "followee_name": "Wilfredo Kshlerin",
                    "follower_name": "Mr. Arthur O'Kon"
                  },
                  "created_at": "2017-02-08T07:13:52.358-05:00",
                  "message": "Mr. Arthur O'Kon is now following Wilfredo Kshlerin"
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Team"
        }
      ]
    }
  },
  "definitions": {
    "CurrentUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "User name."
        },
        "title": {
          "type": [
            "string",
            "null"
          ],
          "title": "Title",
          "description": "User title."
        },
        "time_zone": {
          "type": "string",
          "title": "Time Zone",
          "description": "User time zone."
        },
        "image": {
          "type": "string",
          "title": "Image",
          "description": "User avatar thumbnail URI.",
          "readOnly": true
        },
        "followees_count": {
          "type": "integer",
          "title": "Followees Count",
          "readOnly": true
        },
        "followers_count": {
          "type": "integer",
          "title": "Followers Count",
          "readOnly": true
        },
        "uid": {
          "type": "string",
          "title": "UID",
          "description": "User unique ID in the SSO server.",
          "readOnly": true
        },
        "locale": {
          "type": "string",
          "title": "Locale",
          "description": "User locale preference."
        },
        "date_format": {
          "type": "string",
          "title": "Date Format",
          "description": "User date format preference."
        },
        "email": {
          "type": "string",
          "format": "email",
          "title": "Email",
          "description": "User email address."
        },
        "posts_count": {
          "type": "integer",
          "title": "Posts Count",
          "readOnly": true
        },
        "pending_invitation_subscriptions_count": {
          "type": "integer",
          "title": "Pending Invitation Subscriptions Count",
          "readOnly": true
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Team"
          },
          "readOnly": true
        },
        "authentications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrentAuthentication"
          },
          "readOnly": true
        }
      },
      "required": [
        "email"
      ]
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "User name."
        },
        "title": {
          "type": [
            "string",
            "null"
          ],
          "title": "Title",
          "description": "User title."
        },
        "time_zone": {
          "type": "string",
          "title": "Time Zone",
          "description": "User time zone."
        },
        "image": {
          "type": "string",
          "title": "Image",
          "description": "User avatar thumbnail URI.",
          "readOnly": true
        },
        "followees_count": {
          "type": "integer",
          "title": "Followees Count",
          "readOnly": true
        },
        "followers_count": {
          "type": "integer",
          "title": "Followers Count",
          "readOnly": true
        },
        "current_team_membership": {
          "$ref": "#/definitions/Membership",
          "readOnly": true
        }
      }
    },
    "Users": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/User"
      }
    },
    "Team": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Team name."
        },
        "domain": {
          "type": [
            "string",
            "null"
          ],
          "title": "Domain",
          "description": "Team members domain."
        },
        "gaggle_id": {
          "type": [
            "integer",
            "string",
            "null"
          ],
          "title": "Gaggle ID",
          "description": "Associated Amplify Gaggle integration identifier."
        },
        "activities_enabled": {
          "type": "boolean",
          "title": "Activities Enabled",
          "description": "Indicates that activities feature is enabled.",
          "default": true
        },
        "posts_enabled": {
          "type": "boolean",
          "title": "Posts Enabled",
          "description": "Indicates that posts feature is enabled.",
          "default": true
        },
        "memberships_count": {
          "type": "integer",
          "title": "Memberships Count",
          "readOnly": true
        },
        "posts_count": {
          "type": "integer",
          "title": "Posts Count",
          "readOnly": true
        },
        "icon_url": {
          "type": [
            "string",
            "null"
          ],
          "title": "Icon URL",
          "description": "Asset file icon URL.",
          "readOnly": true
        },
        "addon_community_module": {
          "type": "boolean",
          "title": "Addon Community Module",
          "description": "Indicates that community module feature is enabled."
        }
      },
      "required": [
        "name"
      ]
    },
    "Membership": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "readOnly": true
        },
        "role": {
          "type": "string",
          "title": "Role",
          "description": "The membership role.",
          "default": "member",
          "enum": [
            "member",
            "manager"
          ]
        },
        "membership_status": {
          "type": "string",
          "title": "Membership Status",
          "description": "The membership status.",
          "enum": [
            "rejected",
            "pending",
            "approved",
            "deleted"
          ]
        },
        "leaderboard": {
          "type": [
            "boolean",
            "null"
          ],
          "title": "Leaderboard",
          "description": "Indicates that member participates in user ranking."
        },
        "activities_enabled": {
          "type": "boolean",
          "title": "Activities Enabled",
          "description": "Indicates that activities feature is enabled.",
          "default": true
        },
        "posts_enabled": {
          "type": "boolean",
          "title": "Posts Enabled",
          "description": "Indicates that posts feature is enabled.",
          "default": true
        },
        "enable_individual_tracking": {
          "type": "boolean",
          "title": "Enable Individual Tracking",
          "description": "Indicates that individual member tracking is enabled.",
          "default": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Created At",
          "readOnly": true
        },
        "posts_count": {
          "type": "integer",
          "title": "Posts Count",
          "readOnly": true
        },
        "subscriptions_count": {
          "type": "integer",
          "title": "Subscriptions Count",
          "readOnly": true
        }
      }
    },
    "Preferences": {
      "type": "object",
      "properties": {
        "id": {
          "type": [
            "integer",
            "null"
          ],
          "title": "ID",
          "readOnly": true
        }
      },
      "minProperties": 1
    },
    "Authentication": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "readOnly": true
        },
        "provider": {
          "type": "string",
          "title": "Provider",
          "description": "Authentication provider identifier.",
          "readOnly": true
        },
        "uid": {
          "type": "string",
          "title": "UID",
          "description": "User unique ID of the provider."
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "User name on the provider service."
        },
        "token": {
          "type": "string",
          "title": "Token",
          "description": "User token used for API calls."
        },
        "secret": {
          "type": "string",
          "title": "Secret",
          "description": "User secret used for API calls."
        },
        "code": {
          "type": "string",
          "title": "Code",
          "description": "Authorization code to be exchanged with a user token."
        },
        "redirect_uri": {
          "type": "string",
          "title": "Redirect URI",
          "description": "Redirect URI bound to the user authorization code."
        }
      },
      "required": [
        "uid",
        "name",
        "token"
      ]
    },
    "CurrentAuthentication": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "readOnly": true
        },
        "provider": {
          "type": "string",
          "title": "Provider",
          "description": "Authentication provider identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "User name on the provider service.",
          "readOnly": true
        }
      }
    },
    "Device": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "readOnly": true
        },
        "identifier": {
          "type": "string",
          "title": "Identifier",
          "description": "Device unique ID."
        }
      },
      "required": [
        "identifier"
      ]
    },
    "Channel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Channel name."
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "Channel description."
        },
        "slug": {
          "type": [
            "string",
            "null"
          ],
          "title": "Slug",
          "description": "Channel hashtag."
        },
        "starts_at": {
          "type": [
            "string",
            "null"
          ],
          "format": "date-time",
          "title": "Starts At",
          "description": "Ephemeral channel starting timestamp."
        },
        "expires_at": {
          "type": [
            "string",
            "null"
          ],
          "format": "date-time",
          "title": "Expires At",
          "description": "Ephemeral channel ending timestamp."
        },
        "viewership": {
          "type": "string",
          "title": "Viewership",
          "description": "Channel viewership status.",
          "default": "private",
          "enum": [
            "private",
            "restricted",
            "public",
            "global"
          ]
        },
        "authorship": {
          "type": "string",
          "title": "Authorship",
          "description": "Channel authorship model.",
          "default": "curated",
          "enum": [
            "curated",
            "moderated",
            "open"
          ]
        },
        "posts_count": {
          "type": "integer",
          "title": "Posts Count",
          "readOnly": true
        },
        "subscriptions_count": {
          "type": "integer",
          "title": "Subscriptions Count",
          "readOnly": true
        },
        "subscribers_count": {
          "type": "integer",
          "title": "Subscribers Count",
          "readOnly": true
        },
        "active": {
          "type": "boolean",
          "title": "Active",
          "description": "Channel has started and is not expired.",
          "readOnly": true
        },
        "image_attachment": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "title": "ID",
              "readOnly": true
            },
            "url": {
              "type": "string",
              "title": "Image Attachment URL",
              "description": "Channel banner image URL.",
              "readOnly": true
            }
          },
          "readOnly": true
        },
        "icon": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "title": "ID",
              "readOnly": true
            },
            "url": {
              "type": "string",
              "title": "Icon URL",
              "description": "Channel icon URL.",
              "readOnly": true
            }
          },
          "readOnly": true
        },
        "administrators": {
          "$ref": "#/definitions/Users",
          "readOnly": true
        }
      },
      "required": [
        "name",
        "description",
        "viewership",
        "authorship"
      ]
    },
    "Channels": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Channel"
      }
    },
    "Subscription": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "readOnly": true
        },
        "tier": {
          "type": "string",
          "title": "Tier",
          "description": "Subscription tier.",
          "default": "spectator",
          "enum": [
            "spectator",
            "contributor",
            "moderator",
            "administrator"
          ]
        },
        "notifications_setting": {
          "type": "string",
          "title": "Notifications Setting",
          "description": "Subscription notifications setting.",
          "default": "enabled",
          "enum": [
            "enabled",
            "mute_email",
            "mute_mobile",
            "mute"
          ]
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Created At",
          "readOnly": true
        },
        "invitation": {
          "type": "string",
          "title": "Invitation",
          "description": "Subscription invitation status.",
          "default": "pending",
          "enum": [
            "rejected",
            "pending",
            "accepted"
          ]
        },
        "channel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "title": "ID",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "title": "Name",
              "description": "Channel name.",
              "readOnly": true
            },
            "slug": {
              "type": [
                "string",
                "null"
              ],
              "title": "Slug",
              "description": "Channel hashtag.",
              "readOnly": true
            },
            "viewership": {
              "type": "string",
              "title": "Viewership",
              "description": "Channel viewership status.",
              "default": "private",
              "enum": [
                "private",
                "restricted",
                "public",
                "global"
              ],
              "readOnly": true
            },
            "icon_url": {
              "type": [
                "string",
                "null"
              ],
              "title": "Icon URL",
              "description": "Channel icon URL.",
              "readOnly": true
            }
          },
          "readOnly": true
        },
        "user": {
          "$ref": "#/definitions/User",
          "readOnly": true
        }
      },
      "required": [
        "tier"
      ]
    },
    "Subscriptions": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Subscription"
      }
    },
    "Invitations": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Subscription"
      }
    },
    "Post": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "readOnly": true
        },
        "team_id": {
          "type": "integer",
          "title": "Team ID",
          "readOnly": true
        },
        "text": {
          "type": "string",
          "title": "Text",
          "description": "Post text."
        },
        "link": {
          "type": [
            "string",
            "null"
          ],
          "title": "Link",
          "description": "Post content link."
        },
        "link_title": {
          "type": [
            "string",
            "null"
          ],
          "title": "Link Title",
          "description": "Post content link title."
        },
        "link_description": {
          "type": [
            "string",
            "null"
          ],
          "title": "Link Description",
          "description": "Post content link description."
        },
        "publishable": {
          "type": "boolean",
          "title": "Publishable",
          "description": "Post team publishing indicator.",
          "default": true
        },
        "published_at": {
          "type": [
            "string",
            "null"
          ],
          "format": "date-time",
          "title": "Published At",
          "description": "Post published timestamp.",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Created At",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Updated At",
          "readOnly": true
        },
        "comments_count": {
          "type": "integer",
          "title": "Comments Count",
          "readOnly": true
        },
        "votes_count": {
          "type": "integer",
          "title": "Votes Count",
          "readOnly": true
        },
        "rank": {
          "type": "number",
          "title": "Rank",
          "readOnly": true
        },
        "link_images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          },
          "readOnly": true
        },
        "author": {
          "$ref": "#/definitions/Author",
          "readOnly": true
        },
        "channel": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "title": "ID",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "title": "Name",
              "description": "Channel name.",
              "readOnly": true
            },
            "slug": {
              "type": [
                "string",
                "null"
              ],
              "title": "Slug",
              "description": "Channel hashtag.",
              "readOnly": true
            },
            "viewership": {
              "type": "string",
              "title": "Viewership",
              "description": "Channel viewership status.",
              "default": "private",
              "enum": [
                "private",
                "restricted",
                "public",
                "global"
              ],
              "readOnly": true
            },
            "icon_url": {
              "type": [
                "string",
                "null"
              ],
              "title": "Icon URL",
              "description": "Channel icon URL.",
              "readOnly": true
            }
          },
          "readOnly": true
        },
        "attachment": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "title": "ID",
              "readOnly": true
            },
            "asset": {
              "$ref": "#/definitions/Asset",
              "readOnly": true
            }
          }
        },
        "post_shares": {
          "$ref": "#/definitions/PostShares",
          "readOnly": true
        },
        "text_html": {
          "type": "string",
          "title": "Text in HTML",
          "description": "Post text in HTML.",
          "readOnly": true
        }
      }
    },
    "Posts": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Post"
      }
    },
    "Activity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "readOnly": true
        },
        "amplify_id": {
          "type": "integer",
          "title": "Amplify ID",
          "description": "Integration ID by Amplify.",
          "readOnly": true
        },
        "platform": {
          "type": "string",
          "title": "Platform",
          "description": "Activity platform identifier."
        },
        "type": {
          "type": "string",
          "title": "Type",
          "readOnly": true
        },
        "team_id": {
          "type": "integer",
          "title": "Team ID",
          "readOnly": true
        },
        "gaggle_id": {
          "type": "integer",
          "title": "Gaggle ID",
          "description": "Amplify Gaggle integration identifier.",
          "readOnly": true
        },
        "prompt": {
          "type": [
            "string",
            "null"
          ],
          "title": "Prompt",
          "description": "Activity prompt."
        },
        "preview": {
          "type": "string",
          "title": "Preview",
          "description": "Activity preview.",
          "readOnly": true
        },
        "text": {
          "type": "string",
          "title": "Text",
          "description": "Activity text / message."
        },
        "link": {
          "type": [
            "string",
            "null"
          ],
          "title": "Link",
          "description": "Activity content link."
        },
        "link_title": {
          "type": [
            "string",
            "null"
          ],
          "title": "Link Title",
          "description": "Activity content link title."
        },
        "link_description": {
          "type": [
            "string",
            "null"
          ],
          "title": "Link Description",
          "description": "Activity content link description."
        },
        "hashtag": {
          "type": [
            "string",
            "null"
          ],
          "title": "Hashtag",
          "description": "Activity content hashtag."
        },
        "starts_at": {
          "type": "string",
          "format": "date-time",
          "title": "Starts At",
          "description": "Posting / start time of activity."
        },
        "expires_at": {
          "type": [
            "string",
            "null"
          ],
          "format": "date-time",
          "title": "Expires At",
          "description": "Expiration / end time of activity."
        },
        "points": {
          "type": [
            "integer",
            "null"
          ],
          "title": "Points",
          "description": "Activity member points value."
        },
        "featured": {
          "type": "boolean",
          "title": "Featured",
          "description": "Indicates that activity is featured.",
          "default": false
        },
        "editable": {
          "type": [
            "string",
            "boolean"
          ],
          "title": "Editable",
          "description": "Indicates if member activity is editable prior performance and if partial or full edit is allowed.",
          "default": false,
          "enum": [
            "full",
            "partial",
            "none",
            true,
            false
          ]
        },
        "trackable": {
          "type": "boolean",
          "title": "Trackable",
          "description": "Indicates that activity is trackable.",
          "default": false
        },
        "commentable": {
          "type": [
            "string",
            "boolean"
          ],
          "title": "Commentable",
          "description": "Indicates if member activity is commentable and if comment is required or is optional.",
          "default": false,
          "enum": [
            "required",
            "optional",
            "none",
            true,
            false
          ]
        },
        "mediable": {
          "type": [
            "string",
            "boolean"
          ],
          "title": "Mediable",
          "description": "Indicates if member activity is commentable with media.",
          "default": false,
          "enum": [
            "optional",
            "none",
            true,
            false
          ]
        },
        "redirecting": {
          "type": [
            "boolean",
            "string"
          ],
          "title": "Redirecting",
          "description": "Indicates if member activity is redirecting members and if redirecting should occur in a specific popup size.",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Created At",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Updated At",
          "readOnly": true
        },
        "link_images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          },
          "readOnly": true
        },
        "schedulable": {
          "type": "boolean",
          "title": "Schedulable",
          "description": "Indicates that activity is schedulable.",
          "readOnly": true
        },
        "schedulable_at": {
          "type": "string",
          "format": "date-time",
          "title": "Schedulable At",
          "description": "Activity proposed scheduling time.",
          "readOnly": true
        },
        "channel": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "title": "ID",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "title": "Name",
              "description": "Channel name.",
              "readOnly": true
            },
            "slug": {
              "type": [
                "string",
                "null"
              ],
              "title": "Slug",
              "description": "Channel hashtag.",
              "readOnly": true
            },
            "viewership": {
              "type": "string",
              "title": "Viewership",
              "description": "Channel viewership status.",
              "default": "private",
              "enum": [
                "private",
                "restricted",
                "public",
                "global"
              ],
              "readOnly": true
            },
            "icon_url": {
              "type": [
                "string",
                "null"
              ],
              "title": "Icon URL",
              "description": "Channel icon URL.",
              "readOnly": true
            }
          },
          "readOnly": true
        },
        "suggested_channel": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "title": "ID",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "title": "Name",
              "description": "Channel name.",
              "readOnly": true
            },
            "slug": {
              "type": [
                "string",
                "null"
              ],
              "title": "Slug",
              "description": "Channel hashtag.",
              "readOnly": true
            },
            "viewership": {
              "type": "string",
              "title": "Viewership",
              "description": "Channel viewership status.",
              "default": "private",
              "enum": [
                "private",
                "restricted",
                "public",
                "global"
              ],
              "readOnly": true
            },
            "icon_url": {
              "type": [
                "string",
                "null"
              ],
              "title": "Icon URL",
              "description": "Channel icon URL.",
              "readOnly": true
            }
          },
          "readOnly": true
        },
        "attachment": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "title": "ID",
              "readOnly": true
            },
            "asset": {
              "$ref": "#/definitions/Asset",
              "readOnly": true
            }
          }
        },
        "preview_html": {
          "type": "string",
          "title": "Preview in HTML",
          "description": "Activity preview in HTML.",
          "readOnly": true
        },
        "text_html": {
          "type": "string",
          "title": "Text in HTML",
          "description": "Activity text in HTML.",
          "readOnly": true
        }
      }
    },
    "Activities": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Activity"
      }
    },
    "Author": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "title": "Type",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Author name."
        },
        "description": {
          "type": [
            "string",
            "null"
          ],
          "title": "Description",
          "description": "Author description."
        },
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "description": "Author avatar thumbnail URL.",
          "readOnly": true
        }
      }
    },
    "Image": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "URL",
          "description": "Image URL.",
          "readOnly": true
        },
        "width": {
          "type": "integer",
          "title": "Width",
          "description": "Image width in pixels.",
          "readOnly": true
        },
        "height": {
          "type": "integer",
          "title": "Height",
          "description": "Image height in pixels.",
          "readOnly": true
        },
        "size": {
          "type": "integer",
          "title": "Size",
          "description": "Image file size in bytes.",
          "readOnly": true
        },
        "caption": {
          "type": [
            "string",
            "null"
          ],
          "title": "Caption",
          "description": "Image caption.",
          "readOnly": true
        }
      }
    },
    "ActivitiesStatus": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "readOnly": true
        },
        "scheduled_at": {
          "type": [
            "string",
            "null"
          ],
          "format": "date-time",
          "title": "Scheduled At",
          "description": "Scheduled performance time of this member activity."
        },
        "autoshare": {
          "type": "boolean",
          "title": "Auto-share",
          "description": "Indicates if member activity has been automatically approved.",
          "default": false
        },
        "edited": {
          "type": "boolean",
          "title": "Edited",
          "description": "Indicates if member activity has been edited prior performance.",
          "default": false
        },
        "edit_prefix": {
          "type": [
            "string",
            "null"
          ],
          "title": "Edit Prefix",
          "description": "Member activity text user edited prefix."
        },
        "edit_infix": {
          "type": [
            "string",
            "null"
          ],
          "title": "Edit Infix",
          "description": "Member activity text user edited infix, usually a replacement."
        },
        "edit_suffix": {
          "type": [
            "string",
            "null"
          ],
          "title": "Edit Suffix",
          "description": "Member activity text user edited suffix."
        },
        "feedback": {
          "type": "boolean",
          "title": "Feedback",
          "description": "Indicates if member activity has feedback on refusal reasoning.",
          "default": false
        },
        "feedback_response": {
          "type": [
            "object",
            "string",
            "null"
          ],
          "title": "Feedback Response",
          "description": "Member activity feedback response on refusal reasoning."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Created At",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Updated At",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "title": "State",
          "description": "Tracks the status of the associated activity.",
          "default": "available",
          "enum": [
            "available",
            "refused",
            "approved",
            "failed",
            "forbidden",
            "completed",
            "locked"
          ],
          "readOnly": true
        },
        "state_at": {
          "type": "string",
          "format": "date-time",
          "title": "State At",
          "description": "Calculated record timestamp.",
          "readOnly": true
        },
        "activity": {
          "$ref": "#/definitions/Activity",
          "readOnly": true
        },
        "user": {
          "$ref": "#/definitions/User",
          "readOnly": true
        }
      }
    },
    "ActivitiesStatuses": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ActivitiesStatus"
      }
    },
    "ActivitiesStatusStateTransition": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "readOnly": true
        },
        "namespace": {
          "type": [
            "string",
            "null"
          ],
          "title": "Namespace",
          "description": "Namespace of the state machine in transition activity."
        },
        "event": {
          "type": [
            "string",
            "null"
          ],
          "title": "Event",
          "description": "Event fired the transition."
        },
        "from": {
          "type": [
            "string",
            "null"
          ],
          "title": "From",
          "description": "Previous state of the state machine transition.",
          "enum": [
            "available",
            "refused",
            "approved",
            "failed",
            "forbidden",
            "completed",
            "locked"
          ]
        },
        "to": {
          "type": "string",
          "title": "To",
          "description": "Current state of the state machine transition.",
          "enum": [
            "available",
            "refused",
            "approved",
            "failed",
            "forbidden",
            "completed",
            "locked"
          ]
        },
        "retries": {
          "type": "integer",
          "title": "Retries",
          "description": "Member activity status failure retries counter."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Created At",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/ActivitiesStatus",
          "readOnly": true
        }
      },
      "required": [
        "to"
      ]
    },
    "ActivitiesStatusStateTransitions": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ActivitiesStatusStateTransition"
      }
    },
    "PostsShare": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "readOnly": true
        },
        "platform": {
          "type": "string",
          "title": "Platform",
          "description": "Sharing platform identifier."
        },
        "scheduled_at": {
          "type": [
            "string",
            "null"
          ],
          "format": "date-time",
          "title": "Scheduled At",
          "description": "Scheduled performance time of this post sharing."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Created At",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Updated At",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "title": "State",
          "description": "Tracks the status of the post sharing.",
          "default": "ready",
          "enum": [
            "ready",
            "failed",
            "forbidden",
            "completed"
          ],
          "readOnly": true
        },
        "state_at": {
          "type": "string",
          "format": "date-time",
          "title": "State At",
          "description": "Calculated record timestamp.",
          "readOnly": true
        },
        "post": {
          "$ref": "#/definitions/Post",
          "readOnly": true
        },
        "user": {
          "$ref": "#/definitions/User",
          "readOnly": true
        }
      }
    },
    "PostsShares": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PostsShare"
      }
    },
    "PostsShareStateTransition": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "readOnly": true
        },
        "namespace": {
          "type": [
            "string",
            "null"
          ],
          "title": "Namespace",
          "description": "Namespace of the state machine in transition post sharing."
        },
        "event": {
          "type": [
            "string",
            "null"
          ],
          "title": "Event",
          "description": "Event fired the transition."
        },
        "from": {
          "type": [
            "string",
            "null"
          ],
          "title": "From",
          "description": "Previous state of the state machine transition.",
          "enum": [
            "ready",
            "failed",
            "forbidden",
            "completed"
          ]
        },
        "to": {
          "type": "string",
          "title": "To",
          "description": "Current state of the state machine transition.",
          "enum": [
            "ready",
            "failed",
            "forbidden",
            "completed"
          ]
        },
        "retries": {
          "type": "integer",
          "title": "Retries",
          "description": "Member post sharing failure retries counter."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Created At",
          "readOnly": true
        },
        "share": {
          "$ref": "#/definitions/PostsShare",
          "readOnly": true
        }
      },
      "required": [
        "to"
      ]
    },
    "PostsShareStateTransitions": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PostsShareStateTransition"
      }
    },
    "Comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "readOnly": true
        },
        "text": {
          "type": "string",
          "title": "Text",
          "description": "Comment text."
        },
        "excerpt": {
          "type": "string",
          "title": "Excerpt",
          "description": "Comment excerpt.",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Created At",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Updated At",
          "readOnly": true
        },
        "user": {
          "$ref": "#/definitions/User",
          "readOnly": true
        },
        "text_html": {
          "type": "string",
          "title": "Text in HTML",
          "description": "Comment text in HTML.",
          "readOnly": true
        }
      },
      "required": [
        "text"
      ]
    },
    "Comments": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Comment"
      }
    },
    "Vote": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Created At",
          "readOnly": true
        },
        "voter": {
          "$ref": "#/definitions/User",
          "readOnly": true
        }
      }
    },
    "Votes": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Vote"
      }
    },
    "Reward": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "readOnly": true
        },
        "title": {
          "type": "string",
          "title": "Title",
          "description": "Reward title."
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "Reward description."
        },
        "points_required": {
          "type": "integer",
          "title": "Points Required",
          "description": "Points required by user to redeem this reward."
        },
        "starts_at": {
          "type": "string",
          "format": "date-time",
          "title": "Start Date",
          "description": "Time when reward becomes valid."
        },
        "expires_at": {
          "type": [
            "string",
            "null"
          ],
          "format": "date-time",
          "title": "End Date",
          "description": "Time when reward becomes expired."
        },
        "image_attachment": {
          "type": "object",
          "properties": {
            "amplify_id": {
              "type": "integer",
              "title": "Amplify ID",
              "readOnly": true
            },
            "url": {
              "type": "string",
              "title": "Image Attachment URL",
              "description": "Reward image URL.",
              "readOnly": true
            }
          },
          "readOnly": true
        },
        "questions": {
          "$ref": "#/definitions/RewardsQuestions",
          "readOnly": true
        },
        "users_groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsersGroups"
          }
        }
      },
      "required": [
        "title"
      ]
    },
    "UsersGroups": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/UserGroup"
      }
    },
    "UserGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "Group Name"
        }
      }
    },
    "Rewards": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Reward"
      }
    },
    "RewardsQuestion": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "readOnly": true
        },
        "question": {
          "type": "string",
          "title": "Text",
          "description": "Reward question text."
        }
      },
      "required": [
        "question"
      ]
    },
    "RewardsQuestions": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/RewardsQuestion"
      }
    },
    "RewardsRedemption": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "readOnly": true
        },
        "fulfilled_at": {
          "type": [
            "string",
            "null"
          ],
          "format": "date-time",
          "title": "Fulfilled At",
          "description": "Redemption fulfillment timestamp."
        },
        "reward_points_required": {
          "type": "integer",
          "title": "Points Required",
          "description": "Points consumed by user for this redemption.",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Created At",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "title": "State",
          "description": "Tracks the status of the reward redemption.",
          "default": "activated",
          "enum": [
            "activated",
            "processing",
            "canceled",
            "fulfilled"
          ],
          "readOnly": true
        },
        "reward": {
          "$ref": "#/definitions/Reward",
          "readOnly": true
        },
        "user": {
          "$ref": "#/definitions/User",
          "readOnly": true
        },
        "responses": {
          "$ref": "#/definitions/RewardsResponses",
          "readOnly": true
        }
      }
    },
    "RewardsRedemptions": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/RewardsRedemption"
      }
    },
    "RewardsResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "readOnly": true
        },
        "response": {
          "type": "string",
          "title": "Text",
          "description": "Reward response text."
        },
        "question": {
          "$ref": "#/definitions/RewardsQuestion",
          "readOnly": true
        }
      },
      "required": [
        "response"
      ]
    },
    "RewardsResponses": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/RewardsResponse"
      }
    },
    "Attachment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Attachment optional name."
        },
        "asset": {
          "$ref": "#/definitions/Asset",
          "readOnly": true
        }
      }
    },
    "Asset": {
      "type": "object",
      "properties": {
        "file_name": {
          "type": "string",
          "title": "File Name",
          "description": "Asset file name.",
          "readOnly": true
        },
        "content_type": {
          "type": "string",
          "title": "Content Type",
          "description": "Asset file MIME type.",
          "readOnly": true
        },
        "file_size": {
          "type": "integer",
          "title": "File Size",
          "description": "Asset file size in bytes.",
          "readOnly": true
        },
        "url": {
          "type": "string",
          "title": "URL",
          "description": "Asset file original URL.",
          "readOnly": true
        },
        "processing": {
          "type": "boolean",
          "title": "Processing",
          "description": "Asset background processing flag.",
          "readOnly": true
        },
        "thumbnail_url": {
          "type": "string",
          "title": "Thumbnail URL",
          "description": "Asset file thumbnail URL.",
          "readOnly": true
        },
        "small_url": {
          "type": "string",
          "title": "Small Asset URL",
          "description": "Asset file small version URL.",
          "readOnly": true
        },
        "medium_url": {
          "type": "string",
          "title": "Medium Asset URL",
          "description": "Asset file medium version URL.",
          "readOnly": true
        },
        "large_url": {
          "type": "string",
          "title": "Large Asset URL",
          "description": "Asset file large version URL.",
          "readOnly": true
        },
        "metadata": {
          "type": "object",
          "properties": {
            "duration": {
              "type": "number",
              "title": "Duration",
              "description": "Asset duration.",
              "readOnly": true
            }
          },
          "readOnly": true
        }
      }
    },
    "Announcement": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "readOnly": true
        },
        "data": {
          "type": "object",
          "title": "Data",
          "readOnly": true
        }
      }
    },
    "Announcements": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Announcement"
      }
    },
    "Event": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "readOnly": true
        },
        "team_id": {
          "type": "integer",
          "title": "Team ID",
          "readOnly": true
        },
        "key": {
          "type": "string",
          "title": "Key",
          "description": "Event unique identifier.",
          "readOnly": true
        },
        "subject_id": {
          "type": "integer",
          "title": "Subject ID",
          "readOnly": true
        },
        "subject_type": {
          "type": "string",
          "title": "Subject Type",
          "readOnly": true
        },
        "action": {
          "type": "string",
          "title": "Action",
          "description": "Action concerning this event.",
          "readOnly": true
        },
        "actor_id": {
          "type": [
            "integer",
            "null"
          ],
          "title": "Actor ID",
          "readOnly": true
        },
        "actor_type": {
          "type": [
            "string",
            "null"
          ],
          "title": "Actor Type",
          "readOnly": true
        },
        "data": {
          "type": "object",
          "title": "Data",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Created At",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "title": "Message",
          "description": "The translated event action with the event payload interpolated.",
          "readOnly": true
        }
      }
    },
    "Events": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Event"
      }
    },
    "Gaggle": {
      "type": "object",
      "properties": {
        "amplify_id": {
          "type": "integer",
          "title": "Amplify ID",
          "description": "Integration ID by Amplify.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Gaggle name."
        },
        "logo_url": {
          "type": [
            "string",
            "null"
          ],
          "title": "Logo URL",
          "description": "Gaggle logo URL.",
          "readOnly": true
        },
        "invitation_url": {
          "type": [
            "string",
            "null"
          ],
          "title": "Invitation URL",
          "description": "Gaggle invitation URL.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ]
    },
    "Gaggles": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Gaggle"
      }
    },
    "Campaign": {
      "type": "object",
      "properties": {
        "amplify_id": {
          "type": "integer",
          "title": "Amplify ID",
          "description": "Integration ID by Amplify.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Campaign name."
        }
      },
      "required": [
        "name"
      ]
    },
    "Campaigns": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Campaign"
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "amplify_id": {
          "type": "integer",
          "title": "Amplify ID",
          "description": "Integration ID by Amplify.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Tag name."
        }
      },
      "required": [
        "name"
      ]
    },
    "Tags": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tag"
      }
    },
    "Errors": {
      "type": "object",
      "minProperties": 1
    },
    "Error": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "title": "Status",
          "description": "HTTP Status Code",
          "readOnly": true
        },
        "error": {
          "type": "string",
          "title": "Error",
          "description": "HTTP error description."
        }
      },
      "required": [
        "status",
        "error"
      ]
    }
  },
  "parameters": {
    "Provider": {
      "name": "provider",
      "in": "path",
      "description": "The authentication provider.",
      "required": true,
      "type": "string",
      "enum": [
        "bitly",
        "facebook",
        "google",
        "instagram",
        "linkedin",
        "microsoft",
        "salesforce",
        "slack",
        "tiktok",
        "twitter",
        "vkontakte",
        "yammer"
      ]
    },
    "Platform": {
      "name": "platform",
      "in": "path",
      "description": "The device platform.",
      "required": true,
      "type": "string",
      "enum": [
        "android",
        "ios"
      ]
    },
    "User": {
      "name": "user_id",
      "in": "path",
      "description": "The user scope.",
      "required": true,
      "type": "integer"
    },
    "Team": {
      "name": "team_id",
      "in": "path",
      "description": "The team scope.",
      "required": true,
      "type": "integer"
    },
    "Channel": {
      "name": "channel_id",
      "in": "path",
      "description": "The channel scope.",
      "required": true,
      "type": "integer"
    },
    "Post": {
      "name": "post_id",
      "in": "path",
      "description": "The post scope.",
      "required": true,
      "type": "integer"
    },
    "Activity": {
      "name": "activity_id",
      "in": "path",
      "description": "The activity scope.",
      "required": true,
      "type": "integer"
    },
    "Reward": {
      "name": "reward_id",
      "in": "path",
      "description": "The reward scope.",
      "required": true,
      "type": "integer"
    }
  },
  "securityDefinitions": {
    "gaggleamp_auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "javascript:prompt()//://sso-qa.gaggleampstaging.us/oauth/authorize"
    }
  },
  "security": [
    {
      "gaggleamp_auth": [

      ]
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "User related actions."
    },
    {
      "name": "preferences",
      "description": "Preferences related actions."
    },
    {
      "name": "users",
      "description": "Users related actions."
    },
    {
      "name": "followerships",
      "description": "Followerships related actions."
    },
    {
      "name": "channels",
      "description": "Channels related actions."
    },
    {
      "name": "subscriptions",
      "description": "Subscriptions related actions."
    },
    {
      "name": "posts",
      "description": "Posts related actions."
    },
    {
      "name": "activities",
      "description": "Activities related actions."
    },
    {
      "name": "comments",
      "description": "Comments related actions."
    },
    {
      "name": "votes",
      "description": "Votes related actions."
    },
    {
      "name": "rewards",
      "description": "Rewards related actions."
    },
    {
      "name": "redemptions",
      "description": "Rewards redemptions related actions."
    },
    {
      "name": "attachments",
      "description": "Media attachments related actions."
    },
    {
      "name": "announcements",
      "description": "Announcements related actions."
    },
    {
      "name": "events",
      "description": "Events related actions."
    },
    {
      "name": "authentications",
      "description": "Authentications related actions."
    },
    {
      "name": "devices",
      "description": "Devices related actions."
    },
    {
      "name": "autoshares",
      "description": "Autoshares  related actions."
    },
    {
      "name": "destinations",
      "description": "Entity Destination related actions."
    }
  ]
}
